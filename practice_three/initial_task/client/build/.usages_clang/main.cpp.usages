22 serialization::archive 18 0 0 0 0 71 /home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client 77 /home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/build 0 0 487 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 4 arpa 1 11 1 15 18446744073709551615 1 / 1 15 1 16 18446744073709551615 4 inet 1 16 1 20 18446744073709551615 1 . 1 20 1 21 18446744073709551615 1 h 1 21 1 22 18446744073709551615 1 > 1 22 1 23 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 8 iostream 2 11 2 19 18446744073709551615 1 > 2 19 2 20 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 7 netinet 3 11 3 18 18446744073709551615 1 / 3 18 3 19 18446744073709551615 2 in 3 19 3 21 18446744073709551615 1 . 3 21 3 22 18446744073709551615 1 h 3 22 3 23 18446744073709551615 1 > 3 23 3 24 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 5 stdio 4 11 4 16 18446744073709551615 1 . 4 16 4 17 18446744073709551615 1 h 4 17 4 18 18446744073709551615 1 > 4 18 4 19 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 stdlib 5 11 5 17 18446744073709551615 1 . 5 17 5 18 18446744073709551615 1 h 5 18 5 19 18446744073709551615 1 > 5 19 5 20 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 1 < 6 10 6 11 18446744073709551615 6 string 6 11 6 17 18446744073709551615 1 . 6 17 6 18 18446744073709551615 1 h 6 18 6 19 18446744073709551615 1 > 6 19 6 20 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 6 string 7 11 7 17 18446744073709551615 1 > 7 17 7 18 18446744073709551615 1 # 8 1 8 2 18446744073709551615 7 include 8 2 8 9 18446744073709551615 1 < 8 10 8 11 18446744073709551615 3 sys 8 11 8 14 18446744073709551615 1 / 8 14 8 15 18446744073709551615 6 socket 8 15 8 21 18446744073709551615 1 . 8 21 8 22 18446744073709551615 1 h 8 22 8 23 18446744073709551615 1 > 8 23 8 24 18446744073709551615 1 # 9 1 9 2 18446744073709551615 7 include 9 2 9 9 18446744073709551615 1 < 9 10 9 11 18446744073709551615 6 unistd 9 11 9 17 18446744073709551615 1 . 9 17 9 18 18446744073709551615 1 h 9 18 9 19 18446744073709551615 1 > 9 19 9 20 18446744073709551615 1 # 11 1 11 2 18446744073709551615 6 define 11 2 11 8 18446744073709551615 4 PORT 11 9 11 13 18446744073709551615 4 8080 11 14 11 18 18446744073709551615 5 using 13 1 13 6 18446744073709551615 9 namespace 13 7 13 16 18446744073709551615 3 std 13 17 13 20 0 1 ; 13 20 13 21 18446744073709551615 5 class 15 1 15 6 18446744073709551615 6 Client 15 7 15 13 1 1 { 15 14 15 15 18446744073709551615 6 public 16 1 16 7 18446744073709551615 1 : 16 7 16 8 18446744073709551615 3 int 17 3 17 6 18446744073709551615 4 sock 17 7 17 11 2 1 , 17 11 17 12 18446744073709551615 7 readval 17 13 17 20 3 1 , 17 20 17 21 18446744073709551615 13 server_socket 17 22 17 35 4 1 ; 17 35 17 36 18446744073709551615 6 struct 18 3 18 9 18446744073709551615 11 sockaddr_in 18 10 18 21 5 9 serv_addr 18 22 18 31 6 1 ; 18 31 18 32 18446744073709551615 4 char 19 3 19 7 18446744073709551615 6 buffer 19 8 19 14 7 1 [ 19 14 19 15 18446744073709551615 4 1024 19 15 19 19 18446744073709551615 1 ] 19 19 19 20 18446744073709551615 1 ; 19 20 19 21 18446744073709551615 3 int 21 3 21 6 18446744073709551615 5 start 21 7 21 12 8 1 ( 21 12 21 13 8 1 ) 21 13 21 14 8 1 { 21 15 21 16 18446744073709551615 2 if 22 5 22 7 18446744073709551615 1 ( 22 8 22 9 18446744073709551615 1 ( 22 9 22 10 18446744073709551615 4 sock 22 10 22 14 2 1 = 22 15 22 16 18446744073709551615 6 socket 22 17 22 23 9 1 ( 22 23 22 24 9 7 AF_INET 22 24 22 31 9 1 , 22 31 22 32 9 11 SOCK_STREAM 22 33 22 44 9 1 , 22 44 22 45 9 1 0 22 46 22 47 18446744073709551615 1 ) 22 47 22 48 9 1 ) 22 48 22 49 18446744073709551615 1 < 22 50 22 51 18446744073709551615 1 0 22 52 22 53 18446744073709551615 1 ) 22 53 22 54 18446744073709551615 1 { 22 55 22 56 18446744073709551615 6 perror 23 7 23 13 10 1 ( 23 13 23 14 10 24 "Socket creation failed" 23 14 23 38 18446744073709551615 1 ) 23 38 23 39 10 1 ; 23 39 23 40 18446744073709551615 4 exit 24 7 24 11 11 1 ( 24 11 24 12 11 12 EXIT_FAILURE 24 12 24 24 11 1 ) 24 24 24 25 11 1 ; 24 25 24 26 18446744073709551615 1 } 25 5 25 6 18446744073709551615 9 serv_addr 27 5 27 14 6 1 . 27 14 27 15 18446744073709551615 10 sin_family 27 15 27 25 12 1 = 27 26 27 27 18446744073709551615 7 AF_INET 27 28 27 35 18446744073709551615 1 ; 27 35 27 36 18446744073709551615 9 serv_addr 28 5 28 14 6 1 . 28 14 28 15 18446744073709551615 8 sin_port 28 15 28 23 13 1 = 28 24 28 25 18446744073709551615 5 htons 28 26 28 31 14 1 ( 28 31 28 32 14 4 PORT 28 32 28 36 14 1 ) 28 36 28 37 14 1 ; 28 37 28 38 18446744073709551615 2 if 30 5 30 7 18446744073709551615 1 ( 30 8 30 9 18446744073709551615 9 inet_pton 30 9 30 18 15 1 ( 30 18 30 19 15 7 AF_INET 30 19 30 26 15 1 , 30 26 30 27 15 11 "127.0.0.1" 30 28 30 39 18446744073709551615 1 , 30 39 30 40 15 1 & 30 41 30 42 18446744073709551615 9 serv_addr 30 42 30 51 6 1 . 30 51 30 52 18446744073709551615 8 sin_addr 30 52 30 60 16 1 ) 30 60 30 61 15 2 <= 30 62 30 64 18446744073709551615 1 0 30 65 30 66 18446744073709551615 1 ) 30 66 30 67 18446744073709551615 1 { 30 68 30 69 18446744073709551615 6 perror 31 7 31 13 10 1 ( 31 13 31 14 10 17 "Address invalid" 31 14 31 31 18446744073709551615 1 ) 31 31 31 32 10 1 ; 31 32 31 33 18446744073709551615 4 exit 32 7 32 11 11 1 ( 32 11 32 12 11 12 EXIT_FAILURE 32 12 32 24 11 1 ) 32 24 32 25 11 1 ; 32 25 32 26 18446744073709551615 1 } 33 5 33 6 18446744073709551615 2 if 35 5 35 7 18446744073709551615 1 ( 35 8 35 9 18446744073709551615 1 ( 35 9 35 10 18446744073709551615 13 server_socket 35 10 35 23 4 1 = 35 24 35 25 18446744073709551615 7 connect 35 26 35 33 17 1 ( 35 33 35 34 17 4 sock 35 34 35 38 2 1 , 35 38 35 39 17 1 ( 35 40 35 41 18446744073709551615 6 struct 35 41 35 47 18446744073709551615 8 sockaddr 35 48 35 56 18 1 * 35 57 35 58 18446744073709551615 1 ) 35 58 35 59 18446744073709551615 1 & 35 59 35 60 18446744073709551615 9 serv_addr 35 60 35 69 6 1 , 35 69 35 70 17 6 sizeof 35 71 35 77 18446744073709551615 1 ( 35 77 35 78 18446744073709551615 9 serv_addr 35 78 35 87 6 1 ) 35 87 35 88 18446744073709551615 1 ) 35 88 35 89 17 1 < 35 90 35 91 18446744073709551615 1 0 35 92 35 93 18446744073709551615 1 ) 35 93 35 94 18446744073709551615 1 ) 35 94 35 95 18446744073709551615 1 { 35 96 35 97 18446744073709551615 6 perror 36 7 36 13 10 1 ( 36 13 36 14 10 19 "Connection failed" 36 14 36 33 18446744073709551615 1 ) 36 33 36 34 10 1 ; 36 34 36 35 18446744073709551615 4 exit 37 7 37 11 11 1 ( 37 11 37 12 11 12 EXIT_FAILURE 37 12 37 24 11 1 ) 37 24 37 25 11 1 ; 37 25 37 26 18446744073709551615 1 } 38 5 38 6 18446744073709551615 6 return 40 5 40 11 18446744073709551615 1 1 40 12 40 13 18446744073709551615 1 ; 40 13 40 14 18446744073709551615 1 } 41 3 41 4 18446744073709551615 6 string 43 3 43 9 19 9 readInput 43 10 43 19 20 1 ( 43 19 43 20 20 1 ) 43 20 43 21 20 1 { 43 22 43 23 18446744073709551615 7 readval 44 5 44 12 3 1 = 44 13 44 14 18446744073709551615 4 read 44 15 44 19 21 1 ( 44 19 44 20 21 4 sock 44 20 44 24 2 1 , 44 24 44 25 21 6 buffer 44 26 44 32 7 1 , 44 32 44 33 21 4 1024 44 34 44 38 18446744073709551615 1 ) 44 38 44 39 21 1 ; 44 39 44 40 18446744073709551615 6 string 45 5 45 11 19 8 received 45 12 45 20 22 1 = 45 21 45 22 18446744073709551615 2 "" 45 23 45 25 18446744073709551615 1 ; 45 25 45 26 18446744073709551615 3 for 46 5 46 8 18446744073709551615 1 ( 46 9 46 10 18446744073709551615 4 char 46 10 46 14 18446744073709551615 1 a 46 15 46 16 23 1 : 46 17 46 18 18446744073709551615 6 buffer 46 19 46 25 7 1 ) 46 25 46 26 18446744073709551615 1 { 46 27 46 28 18446744073709551615 2 if 47 7 47 9 18446744073709551615 1 ( 47 10 47 11 18446744073709551615 1 a 47 11 47 12 23 2 == 47 13 47 15 18446744073709551615 3 '#' 47 16 47 19 18446744073709551615 1 ) 47 19 47 20 18446744073709551615 1 { 47 21 47 22 18446744073709551615 5 break 48 9 48 14 18446744073709551615 1 ; 48 14 48 15 18446744073709551615 1 } 49 7 49 8 18446744073709551615 8 received 50 7 50 15 22 1 . 50 15 50 16 24 6 append 50 16 50 22 24 1 ( 50 22 50 23 24 1 1 50 23 50 24 18446744073709551615 1 , 50 24 50 25 24 1 a 50 26 50 27 23 1 ) 50 27 50 28 24 1 ; 50 28 50 29 18446744073709551615 1 } 51 5 51 6 18446744073709551615 6 memset 52 5 52 11 25 1 ( 52 11 52 12 25 6 buffer 52 12 52 18 7 1 , 52 18 52 19 25 4 1024 52 20 52 24 18446744073709551615 1 , 52 24 52 25 25 4 '\0' 52 26 52 30 18446744073709551615 1 ) 52 30 52 31 25 1 ; 52 31 52 32 18446744073709551615 6 return 53 5 53 11 18446744073709551615 8 received 53 12 53 20 22 1 ; 53 20 53 21 18446744073709551615 1 } 54 3 54 4 18446744073709551615 3 int 56 3 56 6 18446744073709551615 10 sendOutput 56 7 56 17 26 1 ( 56 17 56 18 26 6 string 56 18 56 24 19 7 message 56 25 56 32 27 1 ) 56 32 56 33 26 1 { 56 34 56 35 18446744073709551615 7 message 57 5 57 12 27 1 . 57 12 57 13 24 6 append 57 13 57 19 24 1 ( 57 19 57 20 24 1 1 57 20 57 21 18446744073709551615 1 , 57 21 57 22 24 3 '#' 57 23 57 26 18446744073709551615 1 ) 57 26 57 27 24 1 ; 57 27 57 28 18446744073709551615 5 const 58 5 58 10 18446744073709551615 4 char 58 11 58 15 18446744073709551615 1 * 58 16 58 17 18446744073709551615 3 out 58 17 58 20 28 1 = 58 21 58 22 18446744073709551615 7 message 58 23 58 30 27 1 . 58 30 58 31 29 5 c_str 58 31 58 36 29 1 ( 58 36 58 37 29 1 ) 58 37 58 38 29 1 ; 58 38 58 39 18446744073709551615 6 return 59 5 59 11 18446744073709551615 4 send 59 12 59 16 30 1 ( 59 16 59 17 30 4 sock 59 17 59 21 2 1 , 59 21 59 22 30 3 out 59 23 59 26 28 1 , 59 26 59 27 30 6 strlen 59 28 59 34 31 1 ( 59 34 59 35 31 3 out 59 35 59 38 28 1 ) 59 38 59 39 31 1 , 59 39 59 40 30 1 0 59 41 59 42 18446744073709551615 1 ) 59 42 59 43 30 1 ; 59 43 59 44 18446744073709551615 1 } 60 3 60 4 18446744073709551615 4 void 61 3 61 7 18446744073709551615 4 stop 61 8 61 12 32 1 ( 61 12 61 13 32 1 ) 61 13 61 14 32 1 { 61 15 61 16 18446744073709551615 5 close 62 5 62 10 33 1 ( 62 10 62 11 33 13 server_socket 62 11 62 24 4 1 ) 62 24 62 25 33 1 ; 62 25 62 26 18446744073709551615 1 } 63 3 63 4 18446744073709551615 1 } 64 1 64 2 18446744073709551615 1 ; 64 2 64 3 18446744073709551615 3 int 66 1 66 4 18446744073709551615 4 main 66 5 66 9 34 1 ( 66 9 66 10 34 1 ) 66 10 66 11 34 1 { 66 12 66 13 18446744073709551615 4 cout 67 3 67 7 35 2 << 67 8 67 10 36 24 "Client side is running" 67 11 67 35 18446744073709551615 2 << 67 36 67 38 37 4 endl 67 39 67 43 38 1 ; 67 43 67 44 18446744073709551615 6 Client 68 3 68 9 1 6 client 68 10 68 16 39 1 = 68 17 68 18 18446744073709551615 6 Client 68 19 68 25 1 1 ( 68 25 68 26 1 1 ) 68 26 68 27 1 1 ; 68 27 68 28 18446744073709551615 6 client 69 3 69 9 39 1 . 69 9 69 10 8 5 start 69 10 69 15 8 1 ( 69 15 69 16 8 1 ) 69 16 69 17 8 1 ; 69 17 69 18 18446744073709551615 6 string 70 3 70 9 19 7 message 70 10 70 17 40 1 = 70 18 70 19 18446744073709551615 13 "Socket open" 70 20 70 33 18446744073709551615 1 ; 70 33 70 34 18446744073709551615 4 cout 71 3 71 7 35 2 << 71 8 71 10 36 6 client 71 11 71 17 39 1 . 71 17 71 18 20 9 readInput 71 18 71 27 20 1 ( 71 27 71 28 20 1 ) 71 28 71 29 20 2 << 71 30 71 32 37 4 endl 71 33 71 37 38 1 ; 71 37 71 38 18446744073709551615 6 client 72 3 72 9 39 1 . 72 9 72 10 26 10 sendOutput 72 10 72 20 26 1 ( 72 20 72 21 26 7 message 72 21 72 28 40 1 ) 72 28 72 29 26 1 ; 72 29 72 30 18446744073709551615 5 while 74 3 74 8 18446744073709551615 1 ( 74 9 74 10 18446744073709551615 4 true 74 10 74 14 18446744073709551615 1 ) 74 14 74 15 18446744073709551615 1 { 74 16 74 17 18446744073709551615 4 cout 75 5 75 9 35 2 << 75 10 75 12 36 6 client 75 13 75 19 39 1 . 75 19 75 20 20 9 readInput 75 20 75 29 20 1 ( 75 29 75 30 20 1 ) 75 30 75 31 20 2 << 75 32 75 34 37 4 endl 75 35 75 39 38 1 ; 75 39 75 40 18446744073709551615 6 string 77 5 77 11 19 2 in 77 12 77 14 41 1 ; 77 14 77 15 18446744073709551615 3 cin 78 5 78 8 42 2 >> 78 9 78 11 43 2 in 78 12 78 14 41 1 ; 78 14 78 15 18446744073709551615 7 message 79 5 79 12 40 1 = 79 13 79 14 44 2 in 79 15 79 17 41 1 ; 79 17 79 18 18446744073709551615 6 client 80 5 80 11 39 1 . 80 11 80 12 26 10 sendOutput 80 12 80 22 26 1 ( 80 22 80 23 26 7 message 80 23 80 30 40 1 ) 80 30 80 31 26 1 ; 80 31 80 32 18446744073709551615 4 cout 82 5 82 9 35 2 << 82 10 82 12 36 6 client 82 13 82 19 39 1 . 82 19 82 20 20 9 readInput 82 20 82 29 20 1 ( 82 29 82 30 20 1 ) 82 30 82 31 20 2 << 82 32 82 34 37 4 endl 82 35 82 39 38 1 ; 82 39 82 40 18446744073709551615 2 in 83 5 83 7 41 1 = 83 8 83 9 44 2 "" 83 10 83 12 18446744073709551615 1 ; 83 12 83 13 18446744073709551615 3 cin 85 5 85 8 42 2 >> 85 9 85 11 43 2 in 85 12 85 14 41 1 ; 85 14 85 15 18446744073709551615 7 message 86 5 86 12 40 1 = 86 13 86 14 44 2 in 86 15 86 17 41 1 ; 86 17 86 18 18446744073709551615 6 client 87 5 87 11 39 1 . 87 11 87 12 26 10 sendOutput 87 12 87 22 26 1 ( 87 22 87 23 26 7 message 87 23 87 30 40 1 ) 87 30 87 31 26 1 ; 87 31 87 32 18446744073709551615 4 cout 89 5 89 9 35 2 << 89 10 89 12 36 6 client 89 13 89 19 39 1 . 89 19 89 20 20 9 readInput 89 20 89 29 20 1 ( 89 29 89 30 20 1 ) 89 30 89 31 20 2 << 89 32 89 34 37 4 endl 89 35 89 39 38 1 ; 89 39 89 40 18446744073709551615 2 in 90 5 90 7 41 1 = 90 8 90 9 44 2 "" 90 10 90 12 18446744073709551615 1 ; 90 12 90 13 18446744073709551615 3 cin 91 5 91 8 42 2 >> 91 9 91 11 43 2 in 91 12 91 14 41 1 ; 91 14 91 15 18446744073709551615 7 message 92 5 92 12 40 1 = 92 13 92 14 44 2 in 92 15 92 17 41 1 ; 92 17 92 18 18446744073709551615 6 client 93 5 93 11 39 1 . 93 11 93 12 26 10 sendOutput 93 12 93 22 26 1 ( 93 22 93 23 26 7 message 93 23 93 30 40 1 ) 93 30 93 31 26 1 ; 93 31 93 32 18446744073709551615 4 cout 95 5 95 9 35 2 << 95 10 95 12 36 6 client 95 13 95 19 39 1 . 95 19 95 20 20 9 readInput 95 20 95 29 20 1 ( 95 29 95 30 20 1 ) 95 30 95 31 20 2 << 95 32 95 34 37 4 endl 95 35 95 39 38 1 ; 95 39 95 40 18446744073709551615 1 } 96 3 96 4 18446744073709551615 6 client 97 3 97 9 39 1 . 97 9 97 10 32 4 stop 97 10 97 14 32 1 ( 97 14 97 15 32 1 ) 97 15 97 16 32 1 ; 97 16 97 17 18446744073709551615 1 } 98 1 98 2 18446744073709551615 0 0 45 0 0 0 22 0 0 1 13 0 3 std 4 1 13 0 6 Client 6 1 13 0 11 sock:Client 6 1 13 0 14 readval:Client 6 1 13 0 20 server_socket:Client 2 1 13 0 11 sockaddr_in 6 1 13 0 16 serv_addr:Client 6 1 13 0 13 buffer:Client 21 1 13 0 12 start:Client 8 1 13 0 6 socket 8 1 13 0 6 perror 8 1 13 0 4 exit 6 1 13 0 22 sin_family:sockaddr_in 6 1 13 0 20 sin_port:sockaddr_in 8 1 13 0 5 htons 8 1 13 0 9 inet_pton 6 1 13 0 20 sin_addr:sockaddr_in 8 1 13 0 7 connect 2 1 13 0 8 sockaddr 20 1 13 0 10 string:std 21 1 13 0 16 readInput:Client 8 1 13 0 4 read 9 1 13 0 86 45:12:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 9 1 13 0 86 46:15:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 21 1 13 0 31 append:basic_string:__cxx11:std 8 1 13 0 6 memset 21 1 13 0 17 sendOutput:Client 10 1 13 0 86 56:25:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 9 1 13 0 86 58:17:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 21 1 13 0 30 c_str:basic_string:__cxx11:std 8 1 13 0 4 send 8 1 13 0 6 strlen 21 1 13 0 11 stop:Client 8 1 13 0 5 close 8 1 13 0 4 main 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 9 1 13 0 86 68:10:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 9 1 13 0 86 70:10:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 9 1 13 0 86 77:12:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 9 1 13 0 7 cin:std 8 1 13 0 14 operator>>:std 21 1 13 0 34 operator=:basic_string:__cxx11:std 0 0 1 0 0 0 80 /home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/client/main.cpp 1676318886