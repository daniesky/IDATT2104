22 serialization::archive 18 0 0 0 0 71 /home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server 77 /home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/build 0 0 785 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 8 iostream 1 11 1 19 18446744073709551615 1 > 1 19 1 20 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 7 netinet 2 11 2 18 18446744073709551615 1 / 2 18 2 19 18446744073709551615 2 in 2 19 2 21 18446744073709551615 1 . 2 21 2 22 18446744073709551615 1 h 2 22 2 23 18446744073709551615 1 > 2 23 2 24 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 5 stdio 3 11 3 16 18446744073709551615 1 . 3 16 3 17 18446744073709551615 1 h 3 17 3 18 18446744073709551615 1 > 3 18 3 19 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 6 stdlib 4 11 4 17 18446744073709551615 1 . 4 17 4 18 18446744073709551615 1 h 4 18 4 19 18446744073709551615 1 > 4 19 4 20 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 string 5 11 5 17 18446744073709551615 1 . 5 17 5 18 18446744073709551615 1 h 5 18 5 19 18446744073709551615 1 > 5 19 5 20 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 1 < 6 10 6 11 18446744073709551615 6 string 6 11 6 17 18446744073709551615 1 > 6 17 6 18 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 3 sys 7 11 7 14 18446744073709551615 1 / 7 14 7 15 18446744073709551615 6 socket 7 15 7 21 18446744073709551615 1 . 7 21 7 22 18446744073709551615 1 h 7 22 7 23 18446744073709551615 1 > 7 23 7 24 18446744073709551615 1 # 8 1 8 2 18446744073709551615 7 include 8 2 8 9 18446744073709551615 1 < 8 10 8 11 18446744073709551615 6 thread 8 11 8 17 18446744073709551615 1 > 8 17 8 18 18446744073709551615 1 # 9 1 9 2 18446744073709551615 7 include 9 2 9 9 18446744073709551615 1 < 9 10 9 11 18446744073709551615 6 unistd 9 11 9 17 18446744073709551615 1 . 9 17 9 18 18446744073709551615 1 h 9 18 9 19 18446744073709551615 1 > 9 19 9 20 18446744073709551615 1 # 11 1 11 2 18446744073709551615 6 define 11 2 11 8 18446744073709551615 4 PORT 11 9 11 13 18446744073709551615 4 8080 11 14 11 18 18446744073709551615 5 using 13 1 13 6 18446744073709551615 9 namespace 13 7 13 16 18446744073709551615 3 std 13 17 13 20 0 1 ; 13 20 13 21 18446744073709551615 5 class 15 1 15 6 18446744073709551615 6 Server 15 7 15 13 1 1 { 15 14 15 15 18446744073709551615 6 public 16 1 16 7 18446744073709551615 1 : 16 7 16 8 18446744073709551615 6 struct 17 3 17 9 18446744073709551615 11 sockaddr_in 17 10 17 21 2 7 address 17 22 17 29 3 1 ; 17 29 17 30 18446744073709551615 3 int 18 3 18 6 18446744073709551615 13 server_socket 18 7 18 20 4 1 , 18 20 18 21 18446744073709551615 13 client_socket 18 22 18 35 5 1 , 18 35 18 36 18446744073709551615 7 readval 18 37 18 44 6 1 ; 18 44 18 45 18446744073709551615 3 int 19 3 19 6 18446744073709551615 3 opt 19 7 19 10 7 1 = 19 11 19 12 18446744073709551615 1 1 19 13 19 14 18446744073709551615 1 ; 19 14 19 15 18446744073709551615 3 int 20 3 20 6 18446744073709551615 7 addrlen 20 7 20 14 8 1 = 20 15 20 16 18446744073709551615 6 sizeof 20 17 20 23 18446744073709551615 1 ( 20 23 20 24 18446744073709551615 7 address 20 24 20 31 3 1 ) 20 31 20 32 18446744073709551615 1 ; 20 32 20 33 18446744073709551615 4 char 21 3 21 7 18446744073709551615 6 buffer 21 8 21 14 9 1 [ 21 14 21 15 18446744073709551615 4 1024 21 15 21 19 18446744073709551615 1 ] 21 19 21 20 18446744073709551615 1 ; 21 20 21 21 18446744073709551615 3 int 23 3 23 6 18446744073709551615 5 start 23 7 23 12 10 1 ( 23 12 23 13 10 1 ) 23 13 23 14 10 1 { 23 15 23 16 18446744073709551615 2 if 24 5 24 7 18446744073709551615 1 ( 24 8 24 9 18446744073709551615 1 ( 24 9 24 10 18446744073709551615 13 server_socket 24 10 24 23 4 1 = 24 24 24 25 18446744073709551615 6 socket 24 26 24 32 11 1 ( 24 32 24 33 11 7 AF_INET 24 33 24 40 11 1 , 24 40 24 41 11 11 SOCK_STREAM 24 42 24 53 11 1 , 24 53 24 54 11 1 0 24 55 24 56 18446744073709551615 1 ) 24 56 24 57 11 1 ) 24 57 24 58 18446744073709551615 1 < 24 59 24 60 18446744073709551615 1 0 24 61 24 62 18446744073709551615 1 ) 24 62 24 63 18446744073709551615 1 { 24 64 24 65 18446744073709551615 6 perror 25 7 25 13 12 1 ( 25 13 25 14 12 15 "socket failed" 25 14 25 29 18446744073709551615 1 ) 25 29 25 30 12 1 ; 25 30 25 31 18446744073709551615 4 exit 26 7 26 11 13 1 ( 26 11 26 12 13 12 EXIT_FAILURE 26 12 26 24 13 1 ) 26 24 26 25 13 1 ; 26 25 26 26 18446744073709551615 1 } 27 5 27 6 18446744073709551615 2 if 28 5 28 7 18446744073709551615 1 ( 28 8 28 9 18446744073709551615 10 setsockopt 28 9 28 19 14 1 ( 28 19 28 20 14 13 server_socket 28 20 28 33 4 1 , 28 33 28 34 14 10 SOL_SOCKET 28 35 28 45 14 1 , 28 45 28 46 14 12 SO_REUSEADDR 29 20 29 32 14 1 | 29 33 29 34 18446744073709551615 12 SO_REUSEPORT 29 35 29 47 18446744073709551615 1 , 29 47 29 48 14 1 & 29 49 29 50 18446744073709551615 3 opt 29 50 29 53 7 1 , 29 53 29 54 14 6 sizeof 30 20 30 26 18446744073709551615 1 ( 30 26 30 27 18446744073709551615 3 opt 30 27 30 30 7 1 ) 30 30 30 31 18446744073709551615 1 ) 30 31 30 32 14 1 ) 30 32 30 33 18446744073709551615 1 { 30 34 30 35 18446744073709551615 6 perror 31 7 31 13 12 1 ( 31 13 31 14 12 12 "setsockopt" 31 14 31 26 18446744073709551615 1 ) 31 26 31 27 12 1 ; 31 27 31 28 18446744073709551615 4 exit 32 7 32 11 13 1 ( 32 11 32 12 13 12 EXIT_FAILURE 32 12 32 24 13 1 ) 32 24 32 25 13 1 ; 32 25 32 26 18446744073709551615 1 } 33 5 33 6 18446744073709551615 7 address 34 5 34 12 3 1 . 34 12 34 13 18446744073709551615 10 sin_family 34 13 34 23 15 1 = 34 24 34 25 18446744073709551615 7 AF_INET 34 26 34 33 18446744073709551615 1 ; 34 33 34 34 18446744073709551615 7 address 35 5 35 12 3 1 . 35 12 35 13 18446744073709551615 8 sin_addr 35 13 35 21 16 1 . 35 21 35 22 18446744073709551615 6 s_addr 35 22 35 28 17 1 = 35 29 35 30 18446744073709551615 10 INADDR_ANY 35 31 35 41 18446744073709551615 1 ; 35 41 35 42 18446744073709551615 7 address 36 5 36 12 3 1 . 36 12 36 13 18446744073709551615 8 sin_port 36 13 36 21 18 1 = 36 22 36 23 18446744073709551615 5 htons 36 24 36 29 19 1 ( 36 29 36 30 19 4 PORT 36 30 36 34 19 1 ) 36 34 36 35 19 1 ; 36 35 36 36 18446744073709551615 2 if 38 5 38 7 18446744073709551615 1 ( 38 8 38 9 18446744073709551615 4 bind 38 9 38 13 20 1 ( 38 13 38 14 20 13 server_socket 38 14 38 27 4 1 , 38 27 38 28 20 1 ( 38 29 38 30 18446744073709551615 6 struct 38 30 38 36 18446744073709551615 8 sockaddr 38 37 38 45 21 1 * 38 46 38 47 18446744073709551615 1 ) 38 47 38 48 18446744073709551615 1 & 38 48 38 49 18446744073709551615 7 address 38 49 38 56 3 1 , 38 56 38 57 20 6 sizeof 38 58 38 64 18446744073709551615 1 ( 38 64 38 65 18446744073709551615 7 address 38 65 38 72 3 1 ) 38 72 38 73 18446744073709551615 1 ) 38 73 38 74 20 1 < 38 75 38 76 18446744073709551615 1 0 38 77 38 78 18446744073709551615 1 ) 38 78 38 79 18446744073709551615 1 { 38 80 38 81 18446744073709551615 6 perror 39 7 39 13 12 1 ( 39 13 39 14 12 20 "socket bind failed" 39 14 39 34 18446744073709551615 1 ) 39 34 39 35 12 1 ; 39 35 39 36 18446744073709551615 4 exit 40 7 40 11 13 1 ( 40 11 40 12 13 12 EXIT_FAILURE 40 12 40 24 13 1 ) 40 24 40 25 13 1 ; 40 25 40 26 18446744073709551615 1 } 41 5 41 6 18446744073709551615 2 if 43 5 43 7 18446744073709551615 1 ( 43 8 43 9 18446744073709551615 6 listen 43 9 43 15 22 1 ( 43 15 43 16 22 13 server_socket 43 16 43 29 4 1 , 43 29 43 30 22 1 3 43 31 43 32 18446744073709551615 1 ) 43 32 43 33 22 1 < 43 34 43 35 18446744073709551615 1 0 43 36 43 37 18446744073709551615 1 ) 43 37 43 38 18446744073709551615 1 { 43 39 43 40 18446744073709551615 6 perror 44 7 44 13 12 1 ( 44 13 44 14 12 30 "listen for connection failed" 44 14 44 44 18446744073709551615 1 ) 44 44 44 45 12 1 ; 44 45 44 46 18446744073709551615 4 exit 45 7 45 11 13 1 ( 45 11 45 12 13 12 EXIT_FAILURE 45 12 45 24 13 1 ) 45 24 45 25 13 1 ; 45 25 45 26 18446744073709551615 1 } 46 5 46 6 18446744073709551615 2 if 48 5 48 7 18446744073709551615 1 ( 48 8 48 9 18446744073709551615 1 ( 48 9 48 10 18446744073709551615 13 client_socket 48 10 48 23 5 1 = 48 24 48 25 18446744073709551615 6 accept 48 26 48 32 23 1 ( 48 32 48 33 23 13 server_socket 48 33 48 46 4 1 , 48 46 48 47 23 1 ( 48 48 48 49 18446744073709551615 6 struct 48 49 48 55 18446744073709551615 8 sockaddr 48 56 48 64 21 1 * 48 65 48 66 18446744073709551615 1 ) 48 66 48 67 18446744073709551615 1 & 48 67 48 68 18446744073709551615 7 address 48 68 48 75 3 1 , 48 75 48 76 23 1 ( 48 77 48 78 18446744073709551615 9 socklen_t 48 78 48 87 24 1 * 48 88 48 89 18446744073709551615 1 ) 48 89 48 90 18446744073709551615 1 & 48 90 48 91 18446744073709551615 7 addrlen 48 91 48 98 8 1 ) 48 98 48 99 23 1 ) 48 99 48 100 18446744073709551615 1 < 48 101 48 102 18446744073709551615 1 0 48 103 48 104 18446744073709551615 1 ) 48 104 48 105 18446744073709551615 1 { 48 106 48 107 18446744073709551615 6 perror 49 7 49 13 12 1 ( 49 13 49 14 12 26 "accept connection failed" 49 14 49 40 18446744073709551615 1 ) 49 40 49 41 12 1 ; 49 41 49 42 18446744073709551615 4 exit 50 7 50 11 13 1 ( 50 11 50 12 13 12 EXIT_FAILURE 50 12 50 24 13 1 ) 50 24 50 25 13 1 ; 50 25 50 26 18446744073709551615 1 } 51 5 51 6 18446744073709551615 4 cout 53 5 53 9 25 2 << 53 10 53 12 26 37 "Successfully established connection" 53 13 53 50 18446744073709551615 2 << 53 51 53 53 27 4 endl 53 54 53 58 28 1 ; 53 58 53 59 18446744073709551615 6 return 54 5 54 11 18446744073709551615 1 1 54 12 54 13 18446744073709551615 1 ; 54 13 54 14 18446744073709551615 1 } 55 3 55 4 18446744073709551615 6 string 57 3 57 9 29 9 readInput 57 10 57 19 30 1 ( 57 19 57 20 30 1 ) 57 20 57 21 30 1 { 57 22 57 23 18446744073709551615 7 readval 58 5 58 12 6 1 = 58 13 58 14 18446744073709551615 4 read 58 15 58 19 31 1 ( 58 19 58 20 31 13 client_socket 58 20 58 33 5 1 , 58 33 58 34 31 6 buffer 58 35 58 41 9 1 , 58 41 58 42 31 4 1024 58 43 58 47 18446744073709551615 1 ) 58 47 58 48 31 1 ; 58 48 58 49 18446744073709551615 6 string 59 5 59 11 29 8 received 59 12 59 20 32 1 = 59 21 59 22 18446744073709551615 2 "" 59 23 59 25 18446744073709551615 1 ; 59 25 59 26 18446744073709551615 3 for 60 5 60 8 18446744073709551615 1 ( 60 9 60 10 18446744073709551615 4 char 60 10 60 14 18446744073709551615 1 a 60 15 60 16 33 1 : 60 17 60 18 18446744073709551615 6 buffer 60 19 60 25 9 1 ) 60 25 60 26 18446744073709551615 1 { 60 27 60 28 18446744073709551615 2 if 61 7 61 9 18446744073709551615 1 ( 61 10 61 11 18446744073709551615 1 a 61 11 61 12 33 2 == 61 13 61 15 18446744073709551615 3 '#' 61 16 61 19 18446744073709551615 1 ) 61 19 61 20 18446744073709551615 1 { 61 21 61 22 18446744073709551615 5 break 62 9 62 14 18446744073709551615 1 ; 62 14 62 15 18446744073709551615 1 } 63 7 63 8 18446744073709551615 8 received 64 7 64 15 32 1 . 64 15 64 16 34 6 append 64 16 64 22 34 1 ( 64 22 64 23 34 1 1 64 23 64 24 18446744073709551615 1 , 64 24 64 25 34 1 a 64 26 64 27 33 1 ) 64 27 64 28 34 1 ; 64 28 64 29 18446744073709551615 1 } 65 5 65 6 18446744073709551615 6 memset 66 5 66 11 35 1 ( 66 11 66 12 35 6 buffer 66 12 66 18 9 1 , 66 18 66 19 35 4 1024 66 20 66 24 18446744073709551615 1 , 66 24 66 25 35 4 '\0' 66 26 66 30 18446744073709551615 1 ) 66 30 66 31 35 1 ; 66 31 66 32 18446744073709551615 6 return 67 5 67 11 18446744073709551615 8 received 67 12 67 20 32 1 ; 67 20 67 21 18446744073709551615 1 } 68 3 68 4 18446744073709551615 3 int 70 3 70 6 18446744073709551615 7 readInt 70 7 70 14 36 1 ( 70 14 70 15 36 1 ) 70 15 70 16 36 1 { 70 17 70 18 18446744073709551615 7 readval 71 5 71 12 6 1 = 71 13 71 14 18446744073709551615 4 read 71 15 71 19 31 1 ( 71 19 71 20 31 13 client_socket 71 20 71 33 5 1 , 71 33 71 34 31 6 buffer 71 35 71 41 9 1 , 71 41 71 42 31 4 1024 71 43 71 47 18446744073709551615 1 ) 71 47 71 48 31 1 ; 71 48 71 49 18446744073709551615 6 string 72 5 72 11 29 8 received 72 12 72 20 37 1 = 72 21 72 22 18446744073709551615 2 "" 72 23 72 25 18446744073709551615 1 ; 72 25 72 26 18446744073709551615 3 for 73 5 73 8 18446744073709551615 1 ( 73 9 73 10 18446744073709551615 4 char 73 10 73 14 18446744073709551615 1 a 73 15 73 16 38 1 : 73 17 73 18 18446744073709551615 6 buffer 73 19 73 25 9 1 ) 73 25 73 26 18446744073709551615 1 { 73 27 73 28 18446744073709551615 2 if 74 7 74 9 18446744073709551615 1 ( 74 10 74 11 18446744073709551615 1 a 74 11 74 12 38 2 == 74 13 74 15 18446744073709551615 3 '#' 74 16 74 19 18446744073709551615 1 ) 74 19 74 20 18446744073709551615 1 { 74 21 74 22 18446744073709551615 5 break 75 9 75 14 18446744073709551615 1 ; 75 14 75 15 18446744073709551615 1 } 76 7 76 8 18446744073709551615 8 received 77 7 77 15 37 1 . 77 15 77 16 34 6 append 77 16 77 22 34 1 ( 77 22 77 23 34 1 1 77 23 77 24 18446744073709551615 1 , 77 24 77 25 34 1 a 77 26 77 27 38 1 ) 77 27 77 28 34 1 ; 77 28 77 29 18446744073709551615 1 } 78 5 78 6 18446744073709551615 3 try 79 5 79 8 18446744073709551615 1 { 79 9 79 10 18446744073709551615 3 int 80 7 80 10 18446744073709551615 6 numone 80 11 80 17 39 1 = 80 18 80 19 18446744073709551615 4 stoi 80 20 80 24 40 1 ( 80 24 80 25 40 8 received 80 25 80 33 37 1 ) 80 33 80 34 40 1 ; 80 34 80 35 18446744073709551615 6 memset 81 7 81 13 35 1 ( 81 13 81 14 35 6 buffer 81 14 81 20 9 1 , 81 20 81 21 35 4 1024 81 22 81 26 18446744073709551615 1 , 81 26 81 27 35 4 '\0' 81 28 81 32 18446744073709551615 1 ) 81 32 81 33 35 1 ; 81 33 81 34 18446744073709551615 6 return 82 7 82 13 18446744073709551615 6 numone 82 14 82 20 39 1 ; 82 20 82 21 18446744073709551615 1 } 83 5 83 6 18446744073709551615 5 catch 83 7 83 12 18446744073709551615 1 ( 83 13 83 14 18446744073709551615 9 exception 83 14 83 23 41 5 const 83 24 83 29 18446744073709551615 1 & 83 30 83 31 18446744073709551615 1 e 83 31 83 32 42 1 ) 83 32 83 33 18446744073709551615 1 { 83 34 83 35 18446744073709551615 4 cout 84 7 84 11 25 2 << 84 12 84 14 26 1 e 84 15 84 16 42 1 . 84 16 84 17 43 4 what 84 17 84 21 43 1 ( 84 21 84 22 43 1 ) 84 22 84 23 43 2 << 84 24 84 26 27 4 endl 84 27 84 31 28 1 ; 84 31 84 32 18446744073709551615 1 } 85 5 85 6 18446744073709551615 6 memset 86 5 86 11 35 1 ( 86 11 86 12 35 6 buffer 86 12 86 18 9 1 , 86 18 86 19 35 4 1024 86 20 86 24 18446744073709551615 1 , 86 24 86 25 35 4 '\0' 86 26 86 30 18446744073709551615 1 ) 86 30 86 31 35 1 ; 86 31 86 32 18446744073709551615 6 return 87 5 87 11 18446744073709551615 1 - 87 12 87 13 18446744073709551615 1 1 87 13 87 14 18446744073709551615 1 ; 87 14 87 15 18446744073709551615 1 } 88 3 88 4 18446744073709551615 3 int 90 3 90 6 18446744073709551615 10 sendOutput 90 7 90 17 44 1 ( 90 17 90 18 44 6 string 90 18 90 24 29 7 message 90 25 90 32 45 1 ) 90 32 90 33 44 1 { 90 34 90 35 18446744073709551615 7 message 91 5 91 12 45 1 . 91 12 91 13 34 6 append 91 13 91 19 34 1 ( 91 19 91 20 34 1 1 91 20 91 21 18446744073709551615 1 , 91 21 91 22 34 3 '#' 91 23 91 26 18446744073709551615 1 ) 91 26 91 27 34 1 ; 91 27 91 28 18446744073709551615 5 const 92 5 92 10 18446744073709551615 4 char 92 11 92 15 18446744073709551615 1 * 92 16 92 17 18446744073709551615 3 out 92 17 92 20 46 1 = 92 21 92 22 18446744073709551615 7 message 92 23 92 30 45 1 . 92 30 92 31 47 5 c_str 92 31 92 36 47 1 ( 92 36 92 37 47 1 ) 92 37 92 38 47 1 ; 92 38 92 39 18446744073709551615 6 return 93 5 93 11 18446744073709551615 4 send 93 12 93 16 48 1 ( 93 16 93 17 48 13 client_socket 93 17 93 30 5 1 , 93 30 93 31 48 3 out 93 32 93 35 46 1 , 93 35 93 36 48 6 strlen 93 37 93 43 49 1 ( 93 43 93 44 49 3 out 93 44 93 47 46 1 ) 93 47 93 48 49 1 , 93 48 93 49 48 1 0 93 50 93 51 18446744073709551615 1 ) 93 51 93 52 48 1 ; 93 52 93 53 18446744073709551615 1 } 94 3 94 4 18446744073709551615 4 void 96 3 96 7 18446744073709551615 4 stop 96 8 96 12 50 1 ( 96 12 96 13 50 1 ) 96 13 96 14 50 1 { 96 15 96 16 18446744073709551615 5 close 97 5 97 10 51 1 ( 97 10 97 11 51 13 client_socket 97 11 97 24 5 1 ) 97 24 97 25 51 1 ; 97 25 97 26 18446744073709551615 8 shutdown 98 5 98 13 52 1 ( 98 13 98 14 52 13 server_socket 98 14 98 27 4 1 , 98 27 98 28 52 9 SHUT_RDWR 98 29 98 38 52 1 ) 98 38 98 39 52 1 ; 98 39 98 40 18446744073709551615 1 } 99 3 99 4 18446744073709551615 1 } 100 1 100 2 18446744073709551615 1 ; 100 2 100 3 18446744073709551615 3 int 102 1 102 4 18446744073709551615 10 run_server 102 5 102 15 53 1 ( 102 15 102 16 53 1 ) 102 16 102 17 53 1 { 102 18 102 19 18446744073709551615 4 cout 103 3 103 7 25 2 << 103 8 103 10 26 21 "Server side running" 103 11 103 32 18446744073709551615 2 << 103 33 103 35 27 4 endl 103 36 103 40 28 1 ; 103 40 103 41 18446744073709551615 6 Server 104 3 104 9 1 10 connection 104 10 104 20 54 1 = 104 21 104 22 18446744073709551615 6 Server 104 23 104 29 1 1 ( 104 29 104 30 1 1 ) 104 30 104 31 1 1 ; 104 31 104 32 18446744073709551615 10 connection 105 3 105 13 54 1 . 105 13 105 14 10 5 start 105 14 105 19 10 1 ( 105 19 105 20 10 1 ) 105 20 105 21 10 1 ; 105 21 105 22 18446744073709551615 6 string 106 3 106 9 29 7 message 106 10 106 17 55 1 = 106 18 106 19 18446744073709551615 13 "Socket open" 106 20 106 33 18446744073709551615 1 ; 106 33 106 34 18446744073709551615 3 int 107 3 107 6 18446744073709551615 4 sent 107 7 107 11 56 1 = 107 12 107 13 18446744073709551615 10 connection 107 14 107 24 54 1 . 107 24 107 25 44 10 sendOutput 107 25 107 35 44 1 ( 107 35 107 36 44 7 message 107 36 107 43 55 1 ) 107 43 107 44 44 1 ; 107 44 107 45 18446744073709551615 4 cout 108 3 108 7 25 2 << 108 8 108 10 26 10 connection 108 11 108 21 54 1 . 108 21 108 22 30 9 readInput 108 22 108 31 30 1 ( 108 31 108 32 30 1 ) 108 32 108 33 30 2 << 108 34 108 36 27 4 endl 108 37 108 41 28 1 ; 108 41 108 42 18446744073709551615 5 while 110 3 110 8 18446744073709551615 1 ( 110 9 110 10 18446744073709551615 4 true 110 10 110 14 18446744073709551615 1 ) 110 14 110 15 18446744073709551615 1 { 110 16 110 17 18446744073709551615 7 message 112 5 112 12 55 1 = 112 13 112 14 57 24 "Input the first number" 112 15 112 39 18446744073709551615 1 ; 112 39 112 40 18446744073709551615 4 sent 113 5 113 9 56 1 = 113 10 113 11 18446744073709551615 10 connection 113 12 113 22 54 1 . 113 22 113 23 44 10 sendOutput 113 23 113 33 44 1 ( 113 33 113 34 44 7 message 113 34 113 41 55 1 ) 113 41 113 42 44 1 ; 113 42 113 43 18446744073709551615 3 int 115 5 115 8 18446744073709551615 6 numone 115 9 115 15 58 1 = 115 16 115 17 18446744073709551615 10 connection 115 18 115 28 54 1 . 115 28 115 29 36 7 readInt 115 29 115 36 36 1 ( 115 36 115 37 36 1 ) 115 37 115 38 36 1 ; 115 38 115 39 18446744073709551615 4 cout 116 5 116 9 25 2 << 116 10 116 12 27 6 numone 116 13 116 19 58 2 << 116 20 116 22 27 4 endl 116 23 116 27 28 1 ; 116 27 116 28 18446744073709551615 7 message 118 5 118 12 55 1 = 118 13 118 14 57 25 "Input the second number" 118 15 118 40 18446744073709551615 1 ; 118 40 118 41 18446744073709551615 4 sent 119 5 119 9 56 1 = 119 10 119 11 18446744073709551615 10 connection 119 12 119 22 54 1 . 119 22 119 23 44 10 sendOutput 119 23 119 33 44 1 ( 119 33 119 34 44 7 message 119 34 119 41 55 1 ) 119 41 119 42 44 1 ; 119 42 119 43 18446744073709551615 3 int 121 5 121 8 18446744073709551615 6 numtwo 121 9 121 15 59 1 = 121 16 121 17 18446744073709551615 10 connection 121 18 121 28 54 1 . 121 28 121 29 36 7 readInt 121 29 121 36 36 1 ( 121 36 121 37 36 1 ) 121 37 121 38 36 1 ; 121 38 121 39 18446744073709551615 4 cout 122 5 122 9 25 2 << 122 10 122 12 27 6 numtwo 122 13 122 19 59 2 << 122 20 122 22 27 4 endl 122 23 122 27 28 1 ; 122 27 122 28 18446744073709551615 7 message 124 5 124 12 55 1 = 124 13 124 14 57 47 "Select math function \n1.+ \n2.- \n3.* \n4./ " 124 15 124 62 18446744073709551615 1 ; 124 62 124 63 18446744073709551615 10 connection 125 5 125 15 54 1 . 125 15 125 16 44 10 sendOutput 125 16 125 26 44 1 ( 125 26 125 27 44 7 message 125 27 125 34 55 1 ) 125 34 125 35 44 1 ; 125 35 125 36 18446744073709551615 3 int 127 5 127 8 18446744073709551615 4 math 127 9 127 13 60 1 = 127 14 127 15 18446744073709551615 10 connection 127 16 127 26 54 1 . 127 26 127 27 36 7 readInt 127 27 127 34 36 1 ( 127 34 127 35 36 1 ) 127 35 127 36 36 1 ; 127 36 127 37 18446744073709551615 4 cout 128 5 128 9 25 2 << 128 10 128 12 27 4 math 128 13 128 17 60 2 << 128 18 128 20 27 4 endl 128 21 128 25 28 1 ; 128 25 128 26 18446744073709551615 5 float 130 5 130 10 18446744073709551615 3 sum 130 11 130 14 61 1 ; 130 14 130 15 18446744073709551615 6 switch 131 5 131 11 18446744073709551615 1 ( 131 12 131 13 18446744073709551615 4 math 131 13 131 17 60 1 ) 131 17 131 18 18446744073709551615 1 { 131 19 131 20 18446744073709551615 4 case 132 5 132 9 18446744073709551615 1 1 132 10 132 11 18446744073709551615 1 : 132 11 132 12 18446744073709551615 3 sum 133 7 133 10 61 1 = 133 11 133 12 18446744073709551615 6 numone 133 13 133 19 58 1 + 133 20 133 21 18446744073709551615 6 numtwo 133 22 133 28 59 1 ; 133 28 133 29 18446744073709551615 5 break 134 7 134 12 18446744073709551615 1 ; 134 12 134 13 18446744073709551615 4 case 135 5 135 9 18446744073709551615 1 2 135 10 135 11 18446744073709551615 1 : 135 11 135 12 18446744073709551615 3 sum 136 7 136 10 61 1 = 136 11 136 12 18446744073709551615 6 numone 136 13 136 19 58 1 - 136 20 136 21 18446744073709551615 6 numtwo 136 22 136 28 59 1 ; 136 28 136 29 18446744073709551615 5 break 137 7 137 12 18446744073709551615 1 ; 137 12 137 13 18446744073709551615 4 case 138 5 138 9 18446744073709551615 1 3 138 10 138 11 18446744073709551615 1 : 138 11 138 12 18446744073709551615 3 sum 139 7 139 10 61 1 = 139 11 139 12 18446744073709551615 6 numone 139 13 139 19 58 1 * 139 20 139 21 18446744073709551615 6 numtwo 139 22 139 28 59 1 ; 139 28 139 29 18446744073709551615 5 break 140 7 140 12 18446744073709551615 1 ; 140 12 140 13 18446744073709551615 4 case 141 5 141 9 18446744073709551615 1 4 141 10 141 11 18446744073709551615 1 : 141 11 141 12 18446744073709551615 3 sum 142 7 142 10 61 1 = 142 11 142 12 18446744073709551615 1 ( 142 13 142 14 18446744073709551615 5 float 142 14 142 19 18446744073709551615 1 ) 142 19 142 20 18446744073709551615 6 numone 142 20 142 26 58 1 / 142 27 142 28 18446744073709551615 1 ( 142 29 142 30 18446744073709551615 5 float 142 30 142 35 18446744073709551615 1 ) 142 35 142 36 18446744073709551615 6 numtwo 142 36 142 42 59 1 ; 142 42 142 43 18446744073709551615 5 break 143 7 143 12 18446744073709551615 1 ; 143 12 143 13 18446744073709551615 1 } 144 5 144 6 18446744073709551615 7 message 146 5 146 12 55 1 = 146 13 146 14 57 9 to_string 146 15 146 24 62 1 ( 146 24 146 25 62 3 sum 146 25 146 28 61 1 ) 146 28 146 29 62 1 ; 146 29 146 30 18446744073709551615 10 connection 147 5 147 15 54 1 . 147 15 147 16 44 10 sendOutput 147 16 147 26 44 1 ( 147 26 147 27 44 7 message 147 27 147 34 55 1 ) 147 34 147 35 44 1 ; 147 35 147 36 18446744073709551615 11 this_thread 148 5 148 16 63 2 :: 148 16 148 18 64 9 sleep_for 148 18 148 27 64 1 ( 148 27 148 28 64 5 500ms 148 28 148 33 18446744073709551615 1 ) 148 33 148 34 64 1 ; 148 34 148 35 18446744073709551615 1 } 149 3 149 4 18446744073709551615 10 connection 151 3 151 13 54 1 . 151 13 151 14 50 4 stop 151 14 151 18 50 1 ( 151 18 151 19 50 1 ) 151 19 151 20 50 1 ; 151 20 151 21 18446744073709551615 1 } 152 1 152 2 18446744073709551615 3 int 154 1 154 4 18446744073709551615 4 main 154 5 154 9 65 1 ( 154 9 154 10 65 1 ) 154 10 154 11 65 1 { 154 12 154 13 18446744073709551615 5 while 155 3 155 8 18446744073709551615 1 ( 155 9 155 10 18446744073709551615 1 1 155 10 155 11 18446744073709551615 1 ) 155 11 155 12 18446744073709551615 1 { 155 13 155 14 18446744073709551615 3 int 156 5 156 8 18446744073709551615 8 socketid 156 9 156 17 66 1 = 156 18 156 19 18446744073709551615 1 - 156 20 156 21 18446744073709551615 1 1 156 21 156 22 18446744073709551615 1 ; 156 22 156 23 18446744073709551615 6 struct 157 5 157 11 18446744073709551615 11 sockaddr_in 157 12 157 23 2 7 address 157 24 157 31 67 1 ; 157 31 157 32 18446744073709551615 3 int 158 5 158 8 18446744073709551615 7 addrlen 158 9 158 16 68 1 = 158 17 158 18 18446744073709551615 6 sizeof 158 19 158 25 18446744073709551615 1 ( 158 25 158 26 18446744073709551615 7 address 158 26 158 33 67 1 ) 158 33 158 34 18446744073709551615 1 ; 158 34 158 35 18446744073709551615 1 } 159 3 159 4 18446744073709551615 1 } 160 1 160 2 18446744073709551615 0 0 69 0 0 0 22 0 0 1 13 0 3 std 4 1 13 0 6 Server 2 1 13 0 11 sockaddr_in 6 1 13 0 14 address:Server 6 1 13 0 20 server_socket:Server 6 1 13 0 20 client_socket:Server 6 1 13 0 14 readval:Server 6 1 13 0 10 opt:Server 6 1 13 0 14 addrlen:Server 6 1 13 0 13 buffer:Server 21 1 13 0 12 start:Server 8 1 13 0 6 socket 8 1 13 0 6 perror 8 1 13 0 4 exit 8 1 13 0 10 setsockopt 6 1 13 0 22 sin_family:sockaddr_in 6 1 13 0 20 sin_addr:sockaddr_in 6 1 13 0 14 s_addr:in_addr 6 1 13 0 20 sin_port:sockaddr_in 8 1 13 0 5 htons 8 1 13 0 4 bind 2 1 13 0 8 sockaddr 8 1 13 0 6 listen 8 1 13 0 6 accept 20 1 13 0 9 socklen_t 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 20 1 13 0 10 string:std 21 1 13 0 16 readInput:Server 8 1 13 0 4 read 9 1 13 0 86 59:12:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 60:15:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 21 1 13 0 31 append:basic_string:__cxx11:std 8 1 13 0 6 memset 21 1 13 0 14 readInt:Server 9 1 13 0 86 72:12:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 73:15:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 80:11:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 8 1 13 0 16 stoi:__cxx11:std 4 1 13 0 13 exception:std 9 1 13 0 86 83:31:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 21 1 13 0 18 what:exception:std 21 1 13 0 17 sendOutput:Server 10 1 13 0 86 90:25:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 92:17:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 21 1 13 0 30 c_str:basic_string:__cxx11:std 8 1 13 0 4 send 8 1 13 0 6 strlen 21 1 13 0 11 stop:Server 8 1 13 0 5 close 8 1 13 0 8 shutdown 8 1 13 0 10 run_server 9 1 13 0 87 104:10:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 87 106:10:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 107:7:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 21 1 13 0 34 operator=:basic_string:__cxx11:std 9 1 13 0 86 115:9:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 121:9:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 127:9:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 87 130:11:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 8 1 13 0 21 to_string:__cxx11:std 22 1 13 0 15 this_thread:std 8 1 13 0 25 sleep_for:this_thread:std 8 1 13 0 4 main 9 1 13 0 86 156:9:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 87 157:24:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 9 1 13 0 86 158:9:/home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 0 0 1 0 0 0 80 /home/daniesky/CPPprojects/IDATT2104/practice_three/initial_task/server/main.cpp 1676319992