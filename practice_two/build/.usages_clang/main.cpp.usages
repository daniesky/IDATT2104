22 serialization::archive 18 0 0 0 0 49 /home/daniesky/CPPprojects/IDATT2104/practice_two 55 /home/daniesky/CPPprojects/IDATT2104/practice_two/build 0 0 659 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 18 condition_variable 1 11 1 29 18446744073709551615 1 > 1 29 1 30 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 10 functional 2 11 2 21 18446744073709551615 1 > 2 21 2 22 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 8 iostream 3 11 3 19 18446744073709551615 1 > 3 19 3 20 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 4 list 4 11 4 15 18446744073709551615 1 > 4 15 4 16 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 5 mutex 5 11 5 16 18446744073709551615 1 > 5 16 5 17 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 1 < 6 10 6 11 18446744073709551615 6 thread 6 11 6 17 18446744073709551615 1 > 6 17 6 18 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 6 vector 7 11 7 17 18446744073709551615 1 > 7 17 7 18 18446744073709551615 5 using 9 1 9 6 18446744073709551615 9 namespace 9 7 9 16 18446744073709551615 3 std 9 17 9 20 0 1 ; 9 20 9 21 18446744073709551615 81 /*
 * Class holding a number of worker threads. Runs given tasks in parallel.
 */ 10 1 12 4 18446744073709551615 5 class 13 1 13 6 18446744073709551615 7 Workers 13 7 13 14 1 1 { 13 15 13 16 18446744073709551615 6 public 14 1 14 7 18446744073709551615 1 : 14 7 14 8 18446744073709551615 4 bool 15 3 15 7 18446744073709551615 4 wait 15 8 15 12 2 1 = 15 13 15 14 18446744073709551615 4 true 15 15 15 19 18446744073709551615 1 ; 15 19 15 20 18446744073709551615 4 bool 16 3 16 7 18446744073709551615 3 run 16 8 16 11 3 1 = 16 12 16 13 18446744073709551615 4 true 16 14 16 18 18446744073709551615 1 ; 16 18 16 19 18446744073709551615 3 int 17 3 17 6 18446744073709551615 15 sleepingThreads 17 7 17 22 4 1 = 17 23 17 24 18446744073709551615 1 0 17 25 17 26 18446744073709551615 1 ; 17 26 17 27 18446744073709551615 5 mutex 18 3 18 8 5 21 sleepingThreads_mutex 18 9 18 30 6 1 ; 18 30 18 31 18446744073709551615 3 int 19 3 19 6 18446744073709551615 11 threadcount 19 7 19 18 7 1 ; 19 18 19 19 18446744073709551615 6 vector 20 3 20 9 8 1 < 20 9 20 10 18446744073709551615 6 thread 20 10 20 16 9 1 > 20 16 20 17 18446744073709551615 14 worker_threads 20 18 20 32 10 1 ; 20 32 20 33 18446744073709551615 4 list 21 3 21 7 11 1 < 21 7 21 8 18446744073709551615 8 function 21 8 21 16 12 1 < 21 16 21 17 18446744073709551615 4 void 21 17 21 21 18446744073709551615 1 ( 21 21 21 22 18446744073709551615 1 ) 21 22 21 23 18446744073709551615 2 >> 21 23 21 25 18446744073709551615 5 tasks 21 26 21 31 13 1 ; 21 31 21 32 18446744073709551615 5 mutex 22 3 22 8 5 10 wait_mutex 22 9 22 19 14 1 ; 22 19 22 20 18446744073709551615 18 condition_variable 23 3 23 21 15 2 cv 23 22 23 24 16 1 ; 23 24 23 25 18446744073709551615 7 Workers 25 3 25 10 1 1 ( 25 10 25 11 1 3 int 25 11 25 14 18446744073709551615 9 threadnum 25 15 25 24 17 1 ) 25 24 25 25 1 1 : 25 26 25 27 1 11 threadcount 25 28 25 39 7 1 ( 25 39 25 40 1 9 threadnum 25 40 25 49 17 1 ) 25 49 25 50 1 1 { 25 51 25 52 18446744073709551615 1 } 26 3 26 4 18446744073709551615 4 void 28 3 28 7 18446744073709551615 5 start 28 8 28 13 18 1 ( 28 13 28 14 18 1 ) 28 14 28 15 18 1 { 28 16 28 17 18446744073709551615 4 cout 29 5 29 9 19 2 << 29 10 29 12 20 29 "Initializing worker threads" 29 13 29 42 18446744073709551615 2 << 29 43 29 45 21 4 endl 29 46 29 50 22 1 ; 29 50 29 51 18446744073709551615 3 for 30 5 30 8 18446744073709551615 1 ( 30 9 30 10 18446744073709551615 3 int 30 10 30 13 18446744073709551615 1 i 30 14 30 15 23 1 = 30 16 30 17 18446744073709551615 1 0 30 18 30 19 18446744073709551615 1 ; 30 19 30 20 18446744073709551615 1 i 30 21 30 22 23 1 < 30 23 30 24 18446744073709551615 11 threadcount 30 25 30 36 7 1 ; 30 36 30 37 18446744073709551615 1 i 30 38 30 39 23 2 ++ 30 39 30 41 18446744073709551615 1 ) 30 41 30 42 18446744073709551615 1 { 30 43 30 44 18446744073709551615 14 worker_threads 31 7 31 21 10 1 . 31 21 31 22 24 12 emplace_back 31 22 31 34 24 1 ( 31 34 31 35 24 1 [ 31 35 31 36 18446744073709551615 4 this 31 36 31 40 18446744073709551615 1 ] 31 40 31 41 18446744073709551615 1 { 31 42 31 43 18446744073709551615 5 while 32 9 32 14 18446744073709551615 1 ( 32 15 32 16 18446744073709551615 4 true 32 16 32 20 18446744073709551615 1 ) 32 20 32 21 18446744073709551615 1 { 32 22 32 23 18446744073709551615 8 function 33 11 33 19 12 1 < 33 19 33 20 18446744073709551615 4 void 33 20 33 24 18446744073709551615 1 ( 33 24 33 25 18446744073709551615 1 ) 33 25 33 26 18446744073709551615 1 > 33 26 33 27 18446744073709551615 4 task 33 28 33 32 25 1 ; 33 32 33 33 18446744073709551615 1 { 34 11 34 12 18446744073709551615 11 unique_lock 35 13 35 24 26 1 < 35 24 35 25 18446744073709551615 5 mutex 35 25 35 30 5 1 > 35 30 35 31 18446744073709551615 4 lock 35 32 35 36 27 1 ( 35 36 35 37 26 10 wait_mutex 35 37 35 47 14 1 ) 35 47 35 48 26 1 ; 35 48 35 49 18446744073709551615 5 while 36 13 36 18 18446744073709551615 1 ( 36 19 36 20 18446744073709551615 4 wait 36 20 36 24 2 1 ) 36 24 36 25 18446744073709551615 2 cv 37 15 37 17 16 1 . 37 17 37 18 28 4 wait 37 18 37 22 28 1 ( 37 22 37 23 28 4 lock 37 23 37 27 27 1 ) 37 27 37 28 28 1 ; 37 28 37 29 18446744073709551615 2 if 39 13 39 15 18446744073709551615 1 ( 39 16 39 17 18446744073709551615 1 ! 39 17 39 18 18446744073709551615 5 tasks 39 18 39 23 13 1 . 39 23 39 24 29 5 empty 39 24 39 29 29 1 ( 39 29 39 30 29 1 ) 39 30 39 31 29 1 ) 39 31 39 32 18446744073709551615 1 { 39 33 39 34 18446744073709551615 4 task 40 15 40 19 25 1 = 40 20 40 21 30 1 * 40 22 40 23 31 5 tasks 40 23 40 28 13 1 . 40 28 40 29 32 5 begin 40 29 40 34 32 1 ( 40 34 40 35 32 1 ) 40 35 40 36 32 1 ; 40 36 40 37 18446744073709551615 5 tasks 41 15 41 20 13 1 . 41 20 41 21 33 9 pop_front 41 21 41 30 33 1 ( 41 30 41 31 33 1 ) 41 31 41 32 33 1 ; 41 32 41 33 18446744073709551615 1 } 42 13 42 14 18446744073709551615 1 } 43 11 43 12 18446744073709551615 2 if 44 11 44 13 18446744073709551615 1 ( 44 14 44 15 18446744073709551615 4 task 44 15 44 19 25 1 ) 44 19 44 20 18446744073709551615 1 { 44 21 44 22 18446744073709551615 4 task 45 13 45 17 25 1 ( 45 17 45 18 34 1 ) 45 18 45 19 34 1 ; 45 19 45 20 18446744073709551615 1 } 46 11 46 12 18446744073709551615 2 if 47 11 47 13 18446744073709551615 1 ( 47 14 47 15 18446744073709551615 5 tasks 47 15 47 20 13 1 . 47 20 47 21 29 5 empty 47 21 47 26 29 1 ( 47 26 47 27 29 1 ) 47 27 47 28 29 2 && 47 29 47 31 18446744073709551615 1 ! 47 32 47 33 18446744073709551615 3 run 47 33 47 36 3 1 ) 47 36 47 37 18446744073709551615 1 { 47 38 47 39 18446744073709551615 5 break 48 13 48 18 18446744073709551615 1 ; 48 18 48 19 18446744073709551615 1 } 49 11 49 12 18446744073709551615 1 } 50 9 50 10 18446744073709551615 1 { 52 9 52 10 18446744073709551615 11 unique_lock 53 11 53 22 26 1 < 53 22 53 23 18446744073709551615 5 mutex 53 23 53 28 5 1 > 53 28 53 29 18446744073709551615 4 lock 53 30 53 34 35 1 ( 53 34 53 35 26 10 wait_mutex 53 35 53 45 14 1 ) 53 45 53 46 26 1 ; 53 46 53 47 18446744073709551615 4 wait 54 11 54 15 2 1 = 54 16 54 17 18446744073709551615 5 false 54 18 54 23 18446744073709551615 1 ; 54 23 54 24 18446744073709551615 1 } 55 9 55 10 18446744073709551615 2 cv 56 9 56 11 16 1 . 56 11 56 12 36 10 notify_one 56 12 56 22 36 1 ( 56 22 56 23 36 1 ) 56 23 56 24 36 1 ; 56 24 56 25 18446744073709551615 1 } 57 7 57 8 18446744073709551615 1 ) 57 8 57 9 24 1 ; 57 9 57 10 18446744073709551615 1 } 58 5 58 6 18446744073709551615 1 } 59 3 59 4 18446744073709551615 4 void 60 3 60 7 18446744073709551615 4 join 60 8 60 12 37 1 ( 60 12 60 13 37 1 ) 60 13 60 14 37 1 { 60 15 60 16 18446744073709551615 4 stop 61 5 61 9 38 1 ( 61 9 61 10 38 1 ) 61 10 61 11 38 1 ; 61 11 61 12 18446744073709551615 3 for 62 5 62 8 18446744073709551615 1 ( 62 9 62 10 18446744073709551615 4 auto 62 10 62 14 18446744073709551615 1 & 62 15 62 16 18446744073709551615 6 thread 62 16 62 22 39 1 : 62 23 62 24 40 14 worker_threads 62 25 62 39 10 1 ) 62 39 62 40 18446744073709551615 1 { 62 41 62 42 18446744073709551615 6 thread 63 7 63 13 39 1 . 63 13 63 14 41 4 join 63 14 63 18 41 1 ( 63 18 63 19 41 1 ) 63 19 63 20 41 1 ; 63 20 63 21 18446744073709551615 1 } 64 5 64 6 18446744073709551615 1 } 65 3 65 4 18446744073709551615 4 void 67 3 67 7 18446744073709551615 4 post 67 8 67 12 42 1 ( 67 12 67 13 42 8 function 67 13 67 21 12 1 < 67 21 67 22 18446744073709551615 4 void 67 22 67 26 18446744073709551615 1 ( 67 26 67 27 18446744073709551615 1 ) 67 27 67 28 18446744073709551615 1 > 67 28 67 29 18446744073709551615 4 func 67 30 67 34 43 1 ) 67 34 67 35 42 1 { 67 36 67 37 18446744073709551615 11 unique_lock 68 5 68 16 26 1 < 68 16 68 17 18446744073709551615 5 mutex 68 17 68 22 5 1 > 68 22 68 23 18446744073709551615 4 lock 68 24 68 28 44 1 ( 68 28 68 29 26 10 wait_mutex 68 29 68 39 14 1 ) 68 39 68 40 26 1 ; 68 40 68 41 18446744073709551615 5 tasks 69 5 69 10 13 1 . 69 10 69 11 45 12 emplace_back 69 11 69 23 45 1 ( 69 23 69 24 45 4 func 69 24 69 28 43 1 ) 69 28 69 29 45 1 ; 69 29 69 30 18446744073709551615 4 wait 70 5 70 9 2 1 = 70 10 70 11 18446744073709551615 5 false 70 12 70 17 18446744073709551615 1 ; 70 17 70 18 18446744073709551615 2 cv 71 5 71 7 16 1 . 71 7 71 8 36 10 notify_one 71 8 71 18 36 1 ( 71 18 71 19 36 1 ) 71 19 71 20 36 1 ; 71 20 71 21 18446744073709551615 1 } 72 3 72 4 18446744073709551615 4 void 74 3 74 7 18446744073709551615 12 post_timeout 74 8 74 20 46 1 ( 74 20 74 21 46 8 function 74 21 74 29 12 1 < 74 29 74 30 18446744073709551615 4 void 74 30 74 34 18446744073709551615 1 ( 74 34 74 35 18446744073709551615 1 ) 74 35 74 36 18446744073709551615 1 > 74 36 74 37 18446744073709551615 4 func 74 38 74 42 47 1 , 74 42 74 43 46 3 int 74 44 74 47 18446744073709551615 18 timeInMilliseconds 74 48 74 66 48 1 ) 74 66 74 67 46 1 { 74 68 74 69 18446744073709551615 21 sleepingThreads_mutex 75 5 75 26 6 1 . 75 26 75 27 49 4 lock 75 27 75 31 49 1 ( 75 31 75 32 49 1 ) 75 32 75 33 49 1 ; 75 33 75 34 18446744073709551615 15 sleepingThreads 76 5 76 20 4 2 ++ 76 20 76 22 18446744073709551615 1 ; 76 22 76 23 18446744073709551615 21 sleepingThreads_mutex 77 5 77 26 6 1 . 77 26 77 27 50 6 unlock 77 27 77 33 50 1 ( 77 33 77 34 50 1 ) 77 34 77 35 50 1 ; 77 35 77 36 18446744073709551615 6 thread 78 5 78 11 9 1 t 78 12 78 13 51 1 ( 78 13 78 14 9 1 [ 78 14 78 15 18446744073709551615 4 this 78 15 78 19 18446744073709551615 1 , 78 19 78 20 18446744073709551615 18 timeInMilliseconds 78 21 78 39 48 1 , 78 39 78 40 18446744073709551615 4 func 78 41 78 45 47 1 ] 78 45 78 46 18446744073709551615 1 { 78 47 78 48 18446744073709551615 11 this_thread 79 7 79 18 52 2 :: 79 18 79 20 53 9 sleep_for 79 20 79 29 53 1 ( 79 29 79 30 53 6 chrono 79 30 79 36 54 2 :: 79 36 79 38 18446744073709551615 12 milliseconds 79 38 79 50 55 1 ( 79 50 79 51 56 18 timeInMilliseconds 79 51 79 69 48 1 ) 79 69 79 70 56 1 ) 79 70 79 71 53 1 ; 79 71 79 72 18446744073709551615 4 post 80 7 80 11 42 1 ( 80 11 80 12 42 4 func 80 12 80 16 47 1 ) 80 16 80 17 42 1 ; 80 17 80 18 18446744073709551615 21 sleepingThreads_mutex 81 7 81 28 6 1 . 81 28 81 29 49 4 lock 81 29 81 33 49 1 ( 81 33 81 34 49 1 ) 81 34 81 35 49 1 ; 81 35 81 36 18446744073709551615 15 sleepingThreads 82 7 82 22 4 2 -- 82 22 82 24 18446744073709551615 1 ; 82 24 82 25 18446744073709551615 21 sleepingThreads_mutex 83 7 83 28 6 1 . 83 28 83 29 50 6 unlock 83 29 83 35 50 1 ( 83 35 83 36 50 1 ) 83 36 83 37 50 1 ; 83 37 83 38 18446744073709551615 1 } 84 5 84 6 18446744073709551615 1 ) 84 6 84 7 9 1 ; 84 7 84 8 18446744073709551615 1 t 85 5 85 6 51 1 . 85 6 85 7 57 6 detach 85 7 85 13 57 1 ( 85 13 85 14 57 1 ) 85 14 85 15 57 1 ; 85 15 85 16 18446744073709551615 1 } 86 3 86 4 18446744073709551615 4 void 88 3 88 7 18446744073709551615 4 stop 88 8 88 12 38 1 ( 88 12 88 13 38 1 ) 88 13 88 14 38 1 { 88 15 88 16 18446744073709551615 5 while 89 5 89 10 18446744073709551615 1 ( 89 11 89 12 18446744073709551615 4 true 89 12 89 16 18446744073709551615 1 ) 89 16 89 17 18446744073709551615 1 { 89 18 89 19 18446744073709551615 2 if 90 7 90 9 18446744073709551615 1 ( 90 10 90 11 18446744073709551615 15 sleepingThreads 90 11 90 26 4 2 == 90 27 90 29 18446744073709551615 1 0 90 30 90 31 18446744073709551615 1 ) 90 31 90 32 18446744073709551615 1 { 90 33 90 34 18446744073709551615 3 run 91 9 91 12 3 1 = 91 13 91 14 18446744073709551615 5 false 91 15 91 20 18446744073709551615 1 ; 91 20 91 21 18446744073709551615 5 break 92 9 92 14 18446744073709551615 1 ; 92 14 92 15 18446744073709551615 1 } 93 7 93 8 18446744073709551615 1 } 94 5 94 6 18446744073709551615 1 } 95 3 95 4 18446744073709551615 1 } 96 1 96 2 18446744073709551615 1 ; 96 2 96 3 18446744073709551615 3 int 98 1 98 4 18446744073709551615 4 main 98 5 98 9 58 1 ( 98 9 98 10 58 1 ) 98 10 98 11 58 1 { 98 12 98 13 18446744073709551615 7 Workers 99 3 99 10 1 7 workers 99 11 99 18 59 1 ( 99 18 99 19 1 1 4 99 19 99 20 18446744073709551615 1 ) 99 20 99 21 1 1 ; 99 21 99 22 18446744073709551615 7 workers 100 3 100 10 59 1 . 100 10 100 11 18 5 start 100 11 100 16 18 1 ( 100 16 100 17 18 1 ) 100 17 100 18 18 1 ; 100 18 100 19 18446744073709551615 7 workers 102 3 102 10 59 1 . 102 10 102 11 42 4 post 102 11 102 15 42 1 ( 102 15 102 16 42 1 [ 102 16 102 17 18446744073709551615 1 ] 102 17 102 18 18446744073709551615 1 { 102 19 102 20 18446744073709551615 3 for 103 5 103 8 18446744073709551615 1 ( 103 9 103 10 18446744073709551615 3 int 103 10 103 13 18446744073709551615 1 i 103 14 103 15 60 1 = 103 16 103 17 18446744073709551615 1 0 103 18 103 19 18446744073709551615 1 ; 103 19 103 20 18446744073709551615 1 i 103 21 103 22 60 1 < 103 23 103 24 18446744073709551615 1 1 103 25 103 26 18446744073709551615 1 ; 103 26 103 27 18446744073709551615 1 i 103 28 103 29 60 2 ++ 103 29 103 31 18446744073709551615 1 ) 103 31 103 32 18446744073709551615 1 { 103 33 103 34 18446744073709551615 4 cout 104 7 104 11 19 2 << 104 12 104 14 20 26 "task A worked by thread " 104 15 104 41 18446744073709551615 2 << 104 42 104 44 20 11 this_thread 104 45 104 56 52 2 :: 104 56 104 58 61 6 get_id 104 58 104 64 61 1 ( 104 64 104 65 61 1 ) 104 65 104 66 61 2 << 104 67 104 69 21 4 endl 104 70 104 74 22 1 ; 104 74 104 75 18446744073709551615 11 this_thread 105 7 105 18 52 2 :: 105 18 105 20 53 9 sleep_for 105 20 105 29 53 1 ( 105 29 105 30 53 2 1s 105 30 105 32 18446744073709551615 1 ) 105 32 105 33 53 1 ; 105 33 105 34 18446744073709551615 1 } 106 5 106 6 18446744073709551615 4 cout 107 5 107 9 19 2 << 107 10 107 12 20 17 "Task A finished" 107 13 107 30 18446744073709551615 2 << 107 31 107 33 21 4 endl 107 34 107 38 22 1 ; 107 38 107 39 18446744073709551615 1 } 108 3 108 4 18446744073709551615 1 ) 108 4 108 5 42 1 ; 108 5 108 6 18446744073709551615 7 workers 109 3 109 10 59 1 . 109 10 109 11 46 12 post_timeout 109 11 109 23 46 1 ( 109 23 109 24 46 1 [ 109 24 109 25 18446744073709551615 1 ] 109 25 109 26 18446744073709551615 1 { 109 27 109 28 18446744073709551615 3 for 110 5 110 8 18446744073709551615 1 ( 110 9 110 10 18446744073709551615 3 int 110 10 110 13 18446744073709551615 1 i 110 14 110 15 62 1 = 110 16 110 17 18446744073709551615 1 0 110 18 110 19 18446744073709551615 1 ; 110 19 110 20 18446744073709551615 1 i 110 21 110 22 62 1 < 110 23 110 24 18446744073709551615 2 10 110 25 110 27 18446744073709551615 1 ; 110 27 110 28 18446744073709551615 1 i 110 29 110 30 62 2 ++ 110 30 110 32 18446744073709551615 1 ) 110 32 110 33 18446744073709551615 1 { 110 34 110 35 18446744073709551615 4 cout 111 7 111 11 19 2 << 111 12 111 14 20 26 "task B worked by thread " 111 15 111 41 18446744073709551615 2 << 111 42 111 44 20 11 this_thread 111 45 111 56 52 2 :: 111 56 111 58 61 6 get_id 111 58 111 64 61 1 ( 111 64 111 65 61 1 ) 111 65 111 66 61 2 << 111 67 111 69 21 4 endl 111 70 111 74 22 1 ; 111 74 111 75 18446744073709551615 11 this_thread 112 7 112 18 52 2 :: 112 18 112 20 53 9 sleep_for 112 20 112 29 53 1 ( 112 29 112 30 53 2 1s 112 30 112 32 18446744073709551615 1 ) 112 32 112 33 53 1 ; 112 33 112 34 18446744073709551615 1 } 113 5 113 6 18446744073709551615 4 cout 114 5 114 9 19 2 << 114 10 114 12 20 17 "Task B finished" 114 13 114 30 18446744073709551615 2 << 114 31 114 33 21 4 endl 114 34 114 38 22 1 ; 114 38 114 39 18446744073709551615 1 } 115 3 115 4 18446744073709551615 1 , 115 4 115 5 46 4 1000 116 24 116 28 18446744073709551615 1 ) 116 28 116 29 46 1 ; 116 29 116 30 18446744073709551615 7 workers 118 3 118 10 59 1 . 118 10 118 11 42 4 post 118 11 118 15 42 1 ( 118 15 118 16 42 1 [ 118 16 118 17 18446744073709551615 1 ] 118 17 118 18 18446744073709551615 1 { 118 19 118 20 18446744073709551615 3 for 119 5 119 8 18446744073709551615 1 ( 119 9 119 10 18446744073709551615 3 int 119 10 119 13 18446744073709551615 1 i 119 14 119 15 63 1 = 119 16 119 17 18446744073709551615 1 0 119 18 119 19 18446744073709551615 1 ; 119 19 119 20 18446744073709551615 1 i 119 21 119 22 63 1 < 119 23 119 24 18446744073709551615 1 5 119 25 119 26 18446744073709551615 1 ; 119 26 119 27 18446744073709551615 1 i 119 28 119 29 63 2 ++ 119 29 119 31 18446744073709551615 1 ) 119 31 119 32 18446744073709551615 1 { 119 33 119 34 18446744073709551615 4 cout 120 7 120 11 19 2 << 120 12 120 14 20 26 "task C worked by thread " 120 15 120 41 18446744073709551615 2 << 120 42 120 44 20 11 this_thread 120 45 120 56 52 2 :: 120 56 120 58 61 6 get_id 120 58 120 64 61 1 ( 120 64 120 65 61 1 ) 120 65 120 66 61 2 << 120 67 120 69 21 4 endl 120 70 120 74 22 1 ; 120 74 120 75 18446744073709551615 11 this_thread 121 7 121 18 52 2 :: 121 18 121 20 53 9 sleep_for 121 20 121 29 53 1 ( 121 29 121 30 53 2 1s 121 30 121 32 18446744073709551615 1 ) 121 32 121 33 53 1 ; 121 33 121 34 18446744073709551615 1 } 122 5 122 6 18446744073709551615 4 cout 123 5 123 9 19 2 << 123 10 123 12 20 17 "Task C finished" 123 13 123 30 18446744073709551615 2 << 123 31 123 33 21 4 endl 123 34 123 38 22 1 ; 123 38 123 39 18446744073709551615 1 } 124 3 124 4 18446744073709551615 1 ) 124 4 124 5 42 1 ; 124 5 124 6 18446744073709551615 7 workers 126 3 126 10 59 1 . 126 10 126 11 42 4 post 126 11 126 15 42 1 ( 126 15 126 16 42 1 [ 126 16 126 17 18446744073709551615 1 ] 126 17 126 18 18446744073709551615 1 { 126 19 126 20 18446744073709551615 3 for 127 5 127 8 18446744073709551615 1 ( 127 9 127 10 18446744073709551615 3 int 127 10 127 13 18446744073709551615 1 i 127 14 127 15 64 1 = 127 16 127 17 18446744073709551615 1 0 127 18 127 19 18446744073709551615 1 ; 127 19 127 20 18446744073709551615 1 i 127 21 127 22 64 1 < 127 23 127 24 18446744073709551615 1 3 127 25 127 26 18446744073709551615 1 ; 127 26 127 27 18446744073709551615 1 i 127 28 127 29 64 2 ++ 127 29 127 31 18446744073709551615 1 ) 127 31 127 32 18446744073709551615 1 { 127 33 127 34 18446744073709551615 4 cout 128 7 128 11 19 2 << 128 12 128 14 20 26 "task D worked by thread " 128 15 128 41 18446744073709551615 2 << 128 42 128 44 20 11 this_thread 128 45 128 56 52 2 :: 128 56 128 58 61 6 get_id 128 58 128 64 61 1 ( 128 64 128 65 61 1 ) 128 65 128 66 61 2 << 128 67 128 69 21 4 endl 128 70 128 74 22 1 ; 128 74 128 75 18446744073709551615 11 this_thread 129 7 129 18 52 2 :: 129 18 129 20 53 9 sleep_for 129 20 129 29 53 1 ( 129 29 129 30 53 2 1s 129 30 129 32 18446744073709551615 1 ) 129 32 129 33 53 1 ; 129 33 129 34 18446744073709551615 1 } 130 5 130 6 18446744073709551615 4 cout 131 5 131 9 19 2 << 131 10 131 12 20 17 "Task D finished" 131 13 131 30 18446744073709551615 2 << 131 31 131 33 21 4 endl 131 34 131 38 22 1 ; 131 38 131 39 18446744073709551615 1 } 132 3 132 4 18446744073709551615 1 ) 132 4 132 5 42 1 ; 132 5 132 6 18446744073709551615 7 workers 134 3 134 10 59 1 . 134 10 134 11 37 4 join 134 11 134 15 37 1 ( 134 15 134 16 37 1 ) 134 16 134 17 37 1 ; 134 17 134 18 18446744073709551615 4 cout 135 3 135 7 19 2 << 135 8 135 10 20 18 "Workers returned" 135 11 135 29 18446744073709551615 2 << 135 30 135 32 21 4 endl 135 33 135 37 22 1 ; 135 37 135 38 18446744073709551615 1 } 136 1 136 2 18446744073709551615 0 0 65 0 0 0 22 0 0 1 13 0 3 std 4 1 13 0 7 Workers 6 1 13 0 12 wait:Workers 6 1 13 0 11 run:Workers 6 1 13 0 23 sleepingThreads:Workers 4 1 13 0 9 mutex:std 6 1 13 0 29 sleepingThreads_mutex:Workers 6 1 13 0 19 threadcount:Workers 31 1 13 0 10 vector:std 4 1 13 0 10 thread:std 6 1 13 0 22 worker_threads:Workers 31 1 13 0 16 list:__cxx11:std 31 1 13 0 12 function:std 6 1 13 0 13 tasks:Workers 6 1 13 0 18 wait_mutex:Workers 4 1 13 0 22 condition_variable:std 6 1 13 0 10 cv:Workers 10 1 13 0 64 25:15:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 13 start:Workers 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 9 1 13 0 64 30:14:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 23 emplace_back:vector:std 9 1 13 0 64 33:28:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 31 1 13 0 15 unique_lock:std 9 1 13 0 64 35:32:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 27 wait:condition_variable:std 21 1 13 0 22 empty:list:__cxx11:std 21 1 13 0 22 operator=:function:std 21 1 13 0 28 operator*:_List_iterator:std 21 1 13 0 22 begin:list:__cxx11:std 21 1 13 0 26 pop_front:list:__cxx11:std 21 1 13 0 21 operator:function:std 9 1 13 0 64 53:30:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 33 notify_one:condition_variable:std 21 1 13 0 12 join:Workers 21 1 13 0 12 stop:Workers 9 1 13 0 64 62:16:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 37 operator*:__normal_iterator:__gnu_cxx 21 1 13 0 15 join:thread:std 21 1 13 0 12 post:Workers 10 1 13 0 64 67:30:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 9 1 13 0 64 68:24:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 29 emplace_back:list:__cxx11:std 21 1 13 0 20 post_timeout:Workers 10 1 13 0 64 74:38:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 10 1 13 0 64 74:48:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 21 1 13 0 14 lock:mutex:std 21 1 13 0 16 unlock:mutex:std 9 1 13 0 64 78:12:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 22 1 13 0 15 this_thread:std 8 1 13 0 25 sleep_for:this_thread:std 22 1 13 0 10 chrono:std 36 1 13 0 23 milliseconds:chrono:std 24 1 13 0 19 duration:chrono:std 21 1 13 0 17 detach:thread:std 8 1 13 0 4 main 9 1 13 0 64 99:11:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 9 1 13 0 65 103:14:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 8 1 13 0 22 get_id:this_thread:std 9 1 13 0 65 110:14:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 9 1 13 0 65 119:14:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 9 1 13 0 65 127:14:/home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 0 0 1 0 0 0 58 /home/daniesky/CPPprojects/IDATT2104/practice_two/main.cpp 1677505099