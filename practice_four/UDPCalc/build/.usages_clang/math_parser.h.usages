22 serialization::archive 18 0 0 0 0 34 /home/daniesky/CPPprojects/UDPCalc 40 /home/daniesky/CPPprojects/UDPCalc/build 0 0 419 0 0 0 1 # 1 1 1 2 18446744073709551615 6 ifndef 1 2 1 8 18446744073709551615 13 MATH_PARSER_H 1 9 1 22 18446744073709551615 1 # 2 1 2 2 18446744073709551615 6 define 2 2 2 8 18446744073709551615 13 MATH_PARSER_H 2 9 2 22 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 5 stack 4 11 4 16 18446744073709551615 1 > 4 16 4 17 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 string 5 11 5 17 18446744073709551615 1 > 5 17 5 18 18446744073709551615 5 class 7 1 7 6 18446744073709551615 10 MathParser 7 7 7 17 0 1 { 7 18 7 19 18446744073709551615 6 public 8 1 8 7 18446744073709551615 1 : 8 7 8 8 18446744073709551615 6 static 9 3 9 9 18446744073709551615 6 double 9 10 9 16 18446744073709551615 5 parse 9 17 9 22 1 1 ( 9 22 9 23 1 5 const 9 23 9 28 18446744073709551615 3 std 9 29 9 32 2 2 :: 9 32 9 34 18446744073709551615 6 string 9 34 9 40 3 1 & 9 41 9 42 18446744073709551615 10 expression 9 42 9 52 4 1 ) 9 52 9 53 1 1 { 9 54 9 55 18446744073709551615 3 std 10 5 10 8 2 2 :: 10 8 10 10 18446744073709551615 5 stack 10 10 10 15 5 1 < 10 15 10 16 18446744073709551615 6 double 10 16 10 22 18446744073709551615 1 > 10 22 10 23 18446744073709551615 8 operands 10 24 10 32 6 1 ; 10 32 10 33 18446744073709551615 3 std 11 5 11 8 2 2 :: 11 8 11 10 18446744073709551615 5 stack 11 10 11 15 5 1 < 11 15 11 16 18446744073709551615 4 char 11 16 11 20 18446744073709551615 1 > 11 20 11 21 18446744073709551615 9 operators 11 22 11 31 7 1 ; 11 31 11 32 18446744073709551615 3 std 12 5 12 8 2 2 :: 12 8 12 10 18446744073709551615 6 string 12 10 12 16 3 7 num_str 12 17 12 24 8 1 ; 12 24 12 25 18446744073709551615 3 for 13 5 13 8 18446744073709551615 1 ( 13 9 13 10 18446744073709551615 4 char 13 10 13 14 18446744073709551615 1 c 13 15 13 16 9 1 : 13 17 13 18 10 10 expression 13 19 13 29 4 1 ) 13 29 13 30 18446744073709551615 1 { 13 31 13 32 18446744073709551615 2 if 14 7 14 9 18446744073709551615 1 ( 14 10 14 11 18446744073709551615 7 isdigit 14 11 14 18 11 1 ( 14 18 14 19 11 1 c 14 19 14 20 9 1 ) 14 20 14 21 11 2 || 14 22 14 24 18446744073709551615 1 c 14 25 14 26 9 2 == 14 27 14 29 18446744073709551615 3 '.' 14 30 14 33 18446744073709551615 1 ) 14 33 14 34 18446744073709551615 1 { 14 35 14 36 18446744073709551615 7 num_str 15 9 15 16 8 2 += 15 17 15 19 12 1 c 15 20 15 21 9 1 ; 15 21 15 22 18446744073709551615 1 } 16 7 16 8 18446744073709551615 4 else 16 9 16 13 18446744073709551615 2 if 16 14 16 16 18446744073709551615 1 ( 16 17 16 18 18446744073709551615 1 c 16 18 16 19 9 2 == 16 20 16 22 18446744073709551615 3 '+' 16 23 16 26 18446744073709551615 2 || 16 27 16 29 18446744073709551615 1 c 16 30 16 31 9 2 == 16 32 16 34 18446744073709551615 3 '-' 16 35 16 38 18446744073709551615 2 || 16 39 16 41 18446744073709551615 1 c 16 42 16 43 9 2 == 16 44 16 46 18446744073709551615 3 '*' 16 47 16 50 18446744073709551615 2 || 16 51 16 53 18446744073709551615 1 c 16 54 16 55 9 2 == 16 56 16 58 18446744073709551615 3 '/' 16 59 16 62 18446744073709551615 1 ) 16 62 16 63 18446744073709551615 1 { 16 64 16 65 18446744073709551615 2 if 17 9 17 11 18446744073709551615 1 ( 17 12 17 13 18446744073709551615 1 ! 17 13 17 14 18446744073709551615 7 num_str 17 14 17 21 8 1 . 17 21 17 22 13 5 empty 17 22 17 27 13 1 ( 17 27 17 28 13 1 ) 17 28 17 29 13 1 ) 17 29 17 30 18446744073709551615 1 { 17 31 17 32 18446744073709551615 6 double 18 11 18 17 18446744073709551615 3 num 18 18 18 21 14 1 = 18 22 18 23 18446744073709551615 3 std 18 24 18 27 2 2 :: 18 27 18 29 15 4 stod 18 29 18 33 15 1 ( 18 33 18 34 15 7 num_str 18 34 18 41 8 1 ) 18 41 18 42 15 1 ; 18 42 18 43 18446744073709551615 8 operands 19 11 19 19 6 1 . 19 19 19 20 16 4 push 19 20 19 24 16 1 ( 19 24 19 25 16 3 num 19 25 19 28 14 1 ) 19 28 19 29 16 1 ; 19 29 19 30 18446744073709551615 7 num_str 20 11 20 18 8 1 . 20 18 20 19 17 5 clear 20 19 20 24 17 1 ( 20 24 20 25 17 1 ) 20 25 20 26 17 1 ; 20 26 20 27 18446744073709551615 1 } 21 9 21 10 18446744073709551615 5 while 22 9 22 14 18446744073709551615 1 ( 22 15 22 16 18446744073709551615 1 ! 22 16 22 17 18446744073709551615 9 operators 22 17 22 26 7 1 . 22 26 22 27 18 5 empty 22 27 22 32 18 1 ( 22 32 22 33 18 1 ) 22 33 22 34 18 2 && 22 35 22 37 18446744073709551615 10 precedence 22 38 22 48 19 1 ( 22 48 22 49 19 9 operators 22 49 22 58 7 1 . 22 58 22 59 20 3 top 22 59 22 62 20 1 ( 22 62 22 63 20 1 ) 22 63 22 64 20 1 ) 22 64 22 65 19 2 >= 22 66 22 68 18446744073709551615 10 precedence 22 69 22 79 19 1 ( 22 79 22 80 19 1 c 22 80 22 81 9 1 ) 22 81 22 82 19 1 ) 22 82 22 83 18446744073709551615 1 { 22 84 22 85 18446744073709551615 8 evaluate 23 11 23 19 21 1 ( 23 19 23 20 21 8 operands 23 20 23 28 6 1 , 23 28 23 29 21 9 operators 23 30 23 39 7 1 ) 23 39 23 40 21 1 ; 23 40 23 41 18446744073709551615 1 } 24 9 24 10 18446744073709551615 9 operators 25 9 25 18 7 1 . 25 18 25 19 16 4 push 25 19 25 23 16 1 ( 25 23 25 24 16 1 c 25 24 25 25 9 1 ) 25 25 25 26 16 1 ; 25 26 25 27 18446744073709551615 1 } 26 7 26 8 18446744073709551615 1 } 27 5 27 6 18446744073709551615 2 if 28 5 28 7 18446744073709551615 1 ( 28 8 28 9 18446744073709551615 1 ! 28 9 28 10 18446744073709551615 7 num_str 28 10 28 17 8 1 . 28 17 28 18 13 5 empty 28 18 28 23 13 1 ( 28 23 28 24 13 1 ) 28 24 28 25 13 1 ) 28 25 28 26 18446744073709551615 1 { 28 27 28 28 18446744073709551615 6 double 29 7 29 13 18446744073709551615 3 num 29 14 29 17 22 1 = 29 18 29 19 18446744073709551615 3 std 29 20 29 23 2 2 :: 29 23 29 25 15 4 stod 29 25 29 29 15 1 ( 29 29 29 30 15 7 num_str 29 30 29 37 8 1 ) 29 37 29 38 15 1 ; 29 38 29 39 18446744073709551615 8 operands 30 7 30 15 6 1 . 30 15 30 16 16 4 push 30 16 30 20 16 1 ( 30 20 30 21 16 3 num 30 21 30 24 22 1 ) 30 24 30 25 16 1 ; 30 25 30 26 18446744073709551615 1 } 31 5 31 6 18446744073709551615 5 while 32 5 32 10 18446744073709551615 1 ( 32 11 32 12 18446744073709551615 1 ! 32 12 32 13 18446744073709551615 9 operators 32 13 32 22 7 1 . 32 22 32 23 18 5 empty 32 23 32 28 18 1 ( 32 28 32 29 18 1 ) 32 29 32 30 18 1 ) 32 30 32 31 18446744073709551615 1 { 32 32 32 33 18446744073709551615 8 evaluate 33 7 33 15 21 1 ( 33 15 33 16 21 8 operands 33 16 33 24 6 1 , 33 24 33 25 21 9 operators 33 26 33 35 7 1 ) 33 35 33 36 21 1 ; 33 36 33 37 18446744073709551615 1 } 34 5 34 6 18446744073709551615 6 return 35 5 35 11 18446744073709551615 8 operands 35 12 35 20 6 1 . 35 20 35 21 20 3 top 35 21 35 24 20 1 ( 35 24 35 25 20 1 ) 35 25 35 26 20 1 ; 35 26 35 27 18446744073709551615 1 } 36 3 36 4 18446744073709551615 7 private 38 1 38 8 18446744073709551615 1 : 38 8 38 9 18446744073709551615 6 static 39 3 39 9 18446744073709551615 3 int 39 10 39 13 18446744073709551615 10 precedence 39 14 39 24 19 1 ( 39 24 39 25 19 4 char 39 25 39 29 18446744073709551615 2 op 39 30 39 32 23 1 ) 39 32 39 33 19 1 { 39 34 39 35 18446744073709551615 2 if 40 5 40 7 18446744073709551615 1 ( 40 8 40 9 18446744073709551615 2 op 40 9 40 11 23 2 == 40 12 40 14 18446744073709551615 3 '+' 40 15 40 18 18446744073709551615 2 || 40 19 40 21 18446744073709551615 2 op 40 22 40 24 23 2 == 40 25 40 27 18446744073709551615 3 '-' 40 28 40 31 18446744073709551615 1 ) 40 31 40 32 18446744073709551615 1 { 40 33 40 34 18446744073709551615 6 return 41 7 41 13 18446744073709551615 1 1 41 14 41 15 18446744073709551615 1 ; 41 15 41 16 18446744073709551615 1 } 42 5 42 6 18446744073709551615 4 else 42 7 42 11 18446744073709551615 2 if 42 12 42 14 18446744073709551615 1 ( 42 15 42 16 18446744073709551615 2 op 42 16 42 18 23 2 == 42 19 42 21 18446744073709551615 3 '*' 42 22 42 25 18446744073709551615 2 || 42 26 42 28 18446744073709551615 2 op 42 29 42 31 23 2 == 42 32 42 34 18446744073709551615 3 '/' 42 35 42 38 18446744073709551615 1 ) 42 38 42 39 18446744073709551615 1 { 42 40 42 41 18446744073709551615 6 return 43 7 43 13 18446744073709551615 1 2 43 14 43 15 18446744073709551615 1 ; 43 15 43 16 18446744073709551615 1 } 44 5 44 6 18446744073709551615 4 else 44 7 44 11 18446744073709551615 1 { 44 12 44 13 18446744073709551615 6 return 45 7 45 13 18446744073709551615 1 0 45 14 45 15 18446744073709551615 1 ; 45 15 45 16 18446744073709551615 1 } 46 5 46 6 18446744073709551615 1 } 47 3 47 4 18446744073709551615 6 static 49 3 49 9 18446744073709551615 4 void 49 10 49 14 18446744073709551615 8 evaluate 49 15 49 23 21 1 ( 49 23 49 24 21 3 std 49 24 49 27 2 2 :: 49 27 49 29 18446744073709551615 5 stack 49 29 49 34 5 1 < 49 34 49 35 18446744073709551615 6 double 49 35 49 41 18446744073709551615 1 > 49 41 49 42 18446744073709551615 1 & 49 43 49 44 18446744073709551615 8 operands 49 44 49 52 24 1 , 49 52 49 53 21 3 std 49 54 49 57 2 2 :: 49 57 49 59 18446744073709551615 5 stack 49 59 49 64 5 1 < 49 64 49 65 18446744073709551615 4 char 49 65 49 69 18446744073709551615 1 > 49 69 49 70 18446744073709551615 1 & 49 71 49 72 18446744073709551615 9 operators 49 72 49 81 25 1 ) 49 81 49 82 21 1 { 49 83 49 84 18446744073709551615 4 char 50 5 50 9 18446744073709551615 2 op 50 10 50 12 26 1 = 50 13 50 14 18446744073709551615 9 operators 50 15 50 24 25 1 . 50 24 50 25 20 3 top 50 25 50 28 20 1 ( 50 28 50 29 20 1 ) 50 29 50 30 20 1 ; 50 30 50 31 18446744073709551615 9 operators 51 5 51 14 25 1 . 51 14 51 15 27 3 pop 51 15 51 18 27 1 ( 51 18 51 19 27 1 ) 51 19 51 20 27 1 ; 51 20 51 21 18446744073709551615 6 double 52 5 52 11 18446744073709551615 1 b 52 12 52 13 28 1 = 52 14 52 15 18446744073709551615 8 operands 52 16 52 24 24 1 . 52 24 52 25 20 3 top 52 25 52 28 20 1 ( 52 28 52 29 20 1 ) 52 29 52 30 20 1 ; 52 30 52 31 18446744073709551615 8 operands 53 5 53 13 24 1 . 53 13 53 14 27 3 pop 53 14 53 17 27 1 ( 53 17 53 18 27 1 ) 53 18 53 19 27 1 ; 53 19 53 20 18446744073709551615 6 double 54 5 54 11 18446744073709551615 1 a 54 12 54 13 29 1 = 54 14 54 15 18446744073709551615 8 operands 54 16 54 24 24 1 . 54 24 54 25 20 3 top 54 25 54 28 20 1 ( 54 28 54 29 20 1 ) 54 29 54 30 20 1 ; 54 30 54 31 18446744073709551615 8 operands 55 5 55 13 24 1 . 55 13 55 14 27 3 pop 55 14 55 17 27 1 ( 55 17 55 18 27 1 ) 55 18 55 19 27 1 ; 55 19 55 20 18446744073709551615 6 double 56 5 56 11 18446744073709551615 6 result 56 12 56 18 30 1 ; 56 18 56 19 18446744073709551615 2 if 57 5 57 7 18446744073709551615 1 ( 57 8 57 9 18446744073709551615 2 op 57 9 57 11 26 2 == 57 12 57 14 18446744073709551615 3 '+' 57 15 57 18 18446744073709551615 1 ) 57 18 57 19 18446744073709551615 1 { 57 20 57 21 18446744073709551615 6 result 58 7 58 13 30 1 = 58 14 58 15 18446744073709551615 1 a 58 16 58 17 29 1 + 58 18 58 19 18446744073709551615 1 b 58 20 58 21 28 1 ; 58 21 58 22 18446744073709551615 1 } 59 5 59 6 18446744073709551615 4 else 59 7 59 11 18446744073709551615 2 if 59 12 59 14 18446744073709551615 1 ( 59 15 59 16 18446744073709551615 2 op 59 16 59 18 26 2 == 59 19 59 21 18446744073709551615 3 '-' 59 22 59 25 18446744073709551615 1 ) 59 25 59 26 18446744073709551615 1 { 59 27 59 28 18446744073709551615 6 result 60 7 60 13 30 1 = 60 14 60 15 18446744073709551615 1 a 60 16 60 17 29 1 - 60 18 60 19 18446744073709551615 1 b 60 20 60 21 28 1 ; 60 21 60 22 18446744073709551615 1 } 61 5 61 6 18446744073709551615 4 else 61 7 61 11 18446744073709551615 2 if 61 12 61 14 18446744073709551615 1 ( 61 15 61 16 18446744073709551615 2 op 61 16 61 18 26 2 == 61 19 61 21 18446744073709551615 3 '*' 61 22 61 25 18446744073709551615 1 ) 61 25 61 26 18446744073709551615 1 { 61 27 61 28 18446744073709551615 6 result 62 7 62 13 30 1 = 62 14 62 15 18446744073709551615 1 a 62 16 62 17 29 1 * 62 18 62 19 18446744073709551615 1 b 62 20 62 21 28 1 ; 62 21 62 22 18446744073709551615 1 } 63 5 63 6 18446744073709551615 4 else 63 7 63 11 18446744073709551615 2 if 63 12 63 14 18446744073709551615 1 ( 63 15 63 16 18446744073709551615 2 op 63 16 63 18 26 2 == 63 19 63 21 18446744073709551615 3 '/' 63 22 63 25 18446744073709551615 1 ) 63 25 63 26 18446744073709551615 1 { 63 27 63 28 18446744073709551615 6 result 64 7 64 13 30 1 = 64 14 64 15 18446744073709551615 1 a 64 16 64 17 29 1 / 64 18 64 19 18446744073709551615 1 b 64 20 64 21 28 1 ; 64 21 64 22 18446744073709551615 1 } 65 5 65 6 18446744073709551615 8 operands 66 5 66 13 24 1 . 66 13 66 14 16 4 push 66 14 66 18 16 1 ( 66 18 66 19 16 6 result 66 19 66 25 30 1 ) 66 25 66 26 16 1 ; 66 26 66 27 18446744073709551615 1 } 67 3 67 4 18446744073709551615 1 } 68 1 68 2 18446744073709551615 1 ; 68 2 68 3 18446744073709551615 1 # 70 1 70 2 18446744073709551615 5 endif 70 2 70 7 18446744073709551615 16 // MATH_PARSER_H 70 8 70 24 18446744073709551615 0 0 31 0 0 0 4 0 0 1 13 0 10 MathParser 21 1 13 0 16 parse:MathParser 22 1 13 0 3 std 20 1 13 0 10 string:std 10 1 13 0 53 9:42:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 31 1 13 0 9 stack:std 9 1 13 0 54 10:24:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 9 1 13 0 54 11:22:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 9 1 13 0 54 12:17:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 9 1 13 0 54 13:15:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 21 1 13 0 37 operator*:__normal_iterator:__gnu_cxx 8 1 13 0 7 isdigit 21 1 13 0 35 operator+=:basic_string:__cxx11:std 21 1 13 0 30 empty:basic_string:__cxx11:std 9 1 13 0 54 18:18:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 8 1 13 0 16 stod:__cxx11:std 21 1 13 0 14 push:stack:std 21 1 13 0 30 clear:basic_string:__cxx11:std 21 1 13 0 15 empty:stack:std 21 1 13 0 21 precedence:MathParser 21 1 13 0 13 top:stack:std 21 1 13 0 19 evaluate:MathParser 9 1 13 0 54 29:14:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 10 1 13 0 54 39:30:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 10 1 13 0 54 49:44:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 10 1 13 0 54 49:72:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 9 1 13 0 54 50:10:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 21 1 13 0 13 pop:stack:std 9 1 13 0 54 52:12:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 9 1 13 0 54 54:12:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 9 1 13 0 54 56:12:/home/daniesky/CPPprojects/UDPCalc/math_parser.h 0 0 1 0 0 0 48 /home/daniesky/CPPprojects/UDPCalc/math_parser.h 1677062000