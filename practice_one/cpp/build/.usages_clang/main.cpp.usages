22 serialization::archive 18 0 0 0 0 53 /home/daniesky/CPPprojects/IDATT2104/practice_one/cpp 59 /home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/build 0 0 393 0 0 0 1 # 1 1 1 2 18446744073709551615 7 include 1 2 1 9 18446744073709551615 1 < 1 10 1 11 18446744073709551615 6 chrono 1 11 1 17 18446744073709551615 1 > 1 17 1 18 18446744073709551615 1 # 2 1 2 2 18446744073709551615 7 include 2 2 2 9 18446744073709551615 1 < 2 10 2 11 18446744073709551615 8 iostream 2 11 2 19 18446744073709551615 1 > 2 19 2 20 18446744073709551615 1 # 3 1 3 2 18446744073709551615 7 include 3 2 3 9 18446744073709551615 1 < 3 10 3 11 18446744073709551615 4 list 3 11 3 15 18446744073709551615 1 > 3 15 3 16 18446744073709551615 1 # 4 1 4 2 18446744073709551615 7 include 4 2 4 9 18446744073709551615 1 < 4 10 4 11 18446744073709551615 5 mutex 4 11 4 16 18446744073709551615 1 > 4 16 4 17 18446744073709551615 1 # 5 1 5 2 18446744073709551615 7 include 5 2 5 9 18446744073709551615 1 < 5 10 5 11 18446744073709551615 6 thread 5 11 5 17 18446744073709551615 1 > 5 17 5 18 18446744073709551615 1 # 6 1 6 2 18446744073709551615 7 include 6 2 6 9 18446744073709551615 1 < 6 10 6 11 18446744073709551615 6 unistd 6 11 6 17 18446744073709551615 1 . 6 17 6 18 18446744073709551615 1 h 6 18 6 19 18446744073709551615 1 > 6 19 6 20 18446744073709551615 1 # 7 1 7 2 18446744073709551615 7 include 7 2 7 9 18446744073709551615 1 < 7 10 7 11 18446744073709551615 6 vector 7 11 7 17 18446744073709551615 1 > 7 17 7 18 18446744073709551615 5 using 9 1 9 6 18446744073709551615 9 namespace 9 7 9 16 18446744073709551615 3 std 9 17 9 20 0 1 ; 9 20 9 21 18446744073709551615 5 using 10 1 10 6 18446744073709551615 9 namespace 10 7 10 16 18446744073709551615 3 std 10 17 10 20 0 2 :: 10 20 10 22 18446744073709551615 6 chrono 10 22 10 28 1 1 ; 10 28 10 29 18446744073709551615 80 /*
 * Program that uses specified number of threads to find  prime numbers. 
 */ 11 1 13 4 18446744073709551615 3 int 14 1 14 4 18446744073709551615 4 main 14 5 14 9 2 1 ( 14 9 14 10 2 1 ) 14 10 14 11 2 1 { 14 12 14 13 18446744073709551615 6 vector 15 3 15 9 3 1 < 15 9 15 10 18446744073709551615 6 thread 15 10 15 16 4 1 > 15 16 15 17 18446744073709551615 7 threads 15 18 15 25 5 1 ; 15 25 15 26 18446744073709551615 3 int 16 3 16 6 18446744073709551615 5 minnr 16 7 16 12 6 1 , 16 12 16 13 18446744073709551615 5 maxnr 16 14 16 19 7 1 , 16 19 16 20 18446744073709551615 11 threadcount 16 21 16 32 8 1 = 16 33 16 34 18446744073709551615 1 0 16 35 16 36 18446744073709551615 1 ; 16 36 16 37 18446744073709551615 5 mutex 17 3 17 8 9 11 minnr_mutex 17 9 17 20 10 1 ; 17 20 17 21 18446744073709551615 4 list 18 3 18 7 11 1 < 18 7 18 8 18446744073709551615 3 int 18 8 18 11 18446744073709551615 1 > 18 11 18 12 18446744073709551615 6 result 18 13 18 19 12 1 ; 18 19 18 20 18446744073709551615 5 mutex 19 3 19 8 9 12 result_mutex 19 9 19 21 13 1 ; 19 21 19 22 18446744073709551615 4 cout 21 3 21 7 14 2 << 21 8 21 10 15 38 "Input the lower end of the interval:" 21 11 21 49 18446744073709551615 1 ; 21 49 21 50 18446744073709551615 3 cin 22 3 22 6 16 2 >> 22 7 22 9 17 5 minnr 22 10 22 15 6 1 ; 22 15 22 16 18446744073709551615 4 cout 23 3 23 7 14 2 << 23 8 23 10 15 39 "Input the upper end of the interval: " 23 11 23 50 18446744073709551615 1 ; 23 50 23 51 18446744073709551615 3 cin 24 3 24 6 16 2 >> 24 7 24 9 17 5 maxnr 24 10 24 15 7 1 ; 24 15 24 16 18446744073709551615 4 cout 25 3 25 7 14 2 << 25 8 25 10 15 47 "Input the number of threads you wish to run: " 25 11 25 58 18446744073709551615 1 ; 25 58 25 59 18446744073709551615 3 cin 26 3 26 6 16 2 >> 26 7 26 9 17 11 threadcount 26 10 26 21 8 1 ; 26 21 26 22 18446744073709551615 6 vector 27 3 27 9 3 1 < 27 9 27 10 18446744073709551615 3 int 27 10 27 13 18446744073709551615 1 > 27 13 27 14 18446744073709551615 9 calccount 27 15 27 24 18 1 ( 27 24 27 25 3 11 threadcount 27 25 27 36 8 1 ) 27 36 27 37 3 1 ; 27 37 27 38 18446744073709551615 4 cout 29 3 29 7 14 2 << 29 8 29 10 19 5 minnr 29 11 29 16 6 2 << 29 17 29 19 15 5 " - " 29 20 29 25 18446744073709551615 2 << 29 26 29 28 19 5 maxnr 29 29 29 34 7 2 << 29 35 29 37 15 5 " - " 29 38 29 43 18446744073709551615 2 << 29 44 29 46 19 11 threadcount 29 47 29 58 8 2 << 29 59 29 61 19 4 endl 29 62 29 66 20 1 ; 29 66 29 67 18446744073709551615 4 auto 31 3 31 7 18446744073709551615 5 start 31 8 31 13 21 1 = 31 14 31 15 18446744073709551615 21 high_resolution_clock 31 16 31 37 22 2 :: 31 37 31 39 23 3 now 31 39 31 42 23 1 ( 31 42 31 43 23 1 ) 31 43 31 44 23 1 ; 31 44 31 45 18446744073709551615 3 for 33 3 33 6 18446744073709551615 1 ( 33 7 33 8 18446744073709551615 3 int 33 8 33 11 18446744073709551615 1 i 33 12 33 13 24 1 = 33 14 33 15 18446744073709551615 1 0 33 16 33 17 18446744073709551615 1 ; 33 17 33 18 18446744073709551615 1 i 33 19 33 20 24 1 < 33 21 33 22 18446744073709551615 11 threadcount 33 23 33 34 8 1 ; 33 34 33 35 18446744073709551615 1 i 33 36 33 37 24 2 ++ 33 37 33 39 18446744073709551615 1 ) 33 39 33 40 18446744073709551615 1 { 33 41 33 42 18446744073709551615 7 threads 34 5 34 12 5 1 . 34 12 34 13 25 12 emplace_back 34 13 34 25 25 1 ( 34 25 34 26 25 1 [ 34 26 34 27 18446744073709551615 1 i 34 27 34 28 24 1 , 34 28 34 29 18446744073709551615 1 & 34 30 34 31 18446744073709551615 5 minnr 34 31 34 36 6 1 , 34 36 34 37 18446744073709551615 1 & 34 38 34 39 18446744073709551615 5 maxnr 34 39 34 44 7 1 , 34 44 34 45 18446744073709551615 1 & 34 46 34 47 18446744073709551615 11 minnr_mutex 34 47 34 58 10 1 , 34 58 34 59 18446744073709551615 1 & 34 60 34 61 18446744073709551615 6 result 34 61 34 67 12 1 , 34 67 34 68 18446744073709551615 1 & 34 69 34 70 18446744073709551615 12 result_mutex 34 70 34 82 13 1 , 34 82 34 83 18446744073709551615 1 & 34 84 34 85 18446744073709551615 9 calccount 34 85 34 94 18 1 ] 34 94 34 95 18446744073709551615 1 { 34 96 34 97 18446744073709551615 118 // i is copied to the thread, do not capture i as reference (&i) as it might be freed before all the threads finishes. 34 98 34 216 18446744073709551615 3 int 35 7 35 10 18446744073709551615 4 temp 35 11 35 15 26 1 ; 35 15 35 16 18446744073709551615 5 while 36 7 36 12 18446744073709551615 1 ( 36 13 36 14 18446744073709551615 4 true 36 14 36 18 18446744073709551615 1 ) 36 18 36 19 18446744073709551615 1 { 36 20 36 21 18446744073709551615 11 minnr_mutex 37 9 37 20 10 1 . 37 20 37 21 27 4 lock 37 21 37 25 27 1 ( 37 25 37 26 27 1 ) 37 26 37 27 27 1 ; 37 27 37 28 18446744073709551615 4 temp 38 9 38 13 26 1 = 38 14 38 15 18446744073709551615 5 minnr 38 16 38 21 6 1 ; 38 21 38 22 18446744073709551615 5 minnr 39 9 39 14 6 2 ++ 39 14 39 16 18446744073709551615 1 ; 39 16 39 17 18446744073709551615 11 minnr_mutex 40 9 40 20 10 1 . 40 20 40 21 28 6 unlock 40 21 40 27 28 1 ( 40 27 40 28 28 1 ) 40 28 40 29 28 1 ; 40 29 40 30 18446744073709551615 3 int 41 9 41 12 18446744073709551615 4 flag 41 13 41 17 29 1 = 41 18 41 19 18446744073709551615 1 0 41 20 41 21 18446744073709551615 1 ; 41 21 41 22 18446744073709551615 2 if 42 9 42 11 18446744073709551615 1 ( 42 12 42 13 18446744073709551615 4 temp 42 13 42 17 26 1 > 42 18 42 19 18446744073709551615 5 maxnr 42 20 42 25 7 1 ) 42 25 42 26 18446744073709551615 1 { 42 27 42 28 18446744073709551615 5 break 43 11 43 16 18446744073709551615 1 ; 43 16 43 17 18446744073709551615 1 } 44 9 44 10 18446744073709551615 2 if 45 9 45 11 18446744073709551615 1 ( 45 12 45 13 18446744073709551615 4 temp 45 13 45 17 26 2 == 45 18 45 20 18446744073709551615 1 0 45 21 45 22 18446744073709551615 2 || 45 23 45 25 18446744073709551615 4 temp 45 26 45 30 26 2 == 45 31 45 33 18446744073709551615 1 1 45 34 45 35 18446744073709551615 1 ) 45 35 45 36 18446744073709551615 1 { 45 37 45 38 18446744073709551615 4 flag 46 11 46 15 29 1 = 46 16 46 17 18446744073709551615 1 1 46 18 46 19 18446744073709551615 1 ; 46 19 46 20 18446744073709551615 1 } 47 9 47 10 18446744073709551615 4 else 47 11 47 15 18446744073709551615 1 { 47 16 47 17 18446744073709551615 3 for 48 11 48 14 18446744073709551615 1 ( 48 15 48 16 18446744073709551615 3 int 48 16 48 19 18446744073709551615 1 i 48 20 48 21 30 1 = 48 22 48 23 18446744073709551615 1 2 48 24 48 25 18446744073709551615 1 ; 48 25 48 26 18446744073709551615 1 i 48 27 48 28 30 2 <= 48 29 48 31 18446744073709551615 4 temp 48 32 48 36 26 1 / 48 37 48 38 18446744073709551615 1 2 48 39 48 40 18446744073709551615 1 ; 48 40 48 41 18446744073709551615 1 i 48 42 48 43 30 2 ++ 48 43 48 45 18446744073709551615 1 ) 48 45 48 46 18446744073709551615 1 { 48 47 48 48 18446744073709551615 2 if 49 13 49 15 18446744073709551615 1 ( 49 16 49 17 18446744073709551615 4 temp 49 17 49 21 26 1 % 49 22 49 23 18446744073709551615 1 i 49 24 49 25 30 2 == 49 26 49 28 18446744073709551615 1 0 49 29 49 30 18446744073709551615 1 ) 49 30 49 31 18446744073709551615 1 { 49 32 49 33 18446744073709551615 4 flag 50 15 50 19 29 1 = 50 20 50 21 18446744073709551615 1 1 50 22 50 23 18446744073709551615 1 ; 50 23 50 24 18446744073709551615 5 break 51 15 51 20 18446744073709551615 1 ; 51 20 51 21 18446744073709551615 1 } 52 13 52 14 18446744073709551615 1 } 53 11 53 12 18446744073709551615 1 } 54 9 54 10 18446744073709551615 2 if 55 9 55 11 18446744073709551615 1 ( 55 12 55 13 18446744073709551615 4 flag 55 13 55 17 29 2 == 55 18 55 20 18446744073709551615 1 0 55 21 55 22 18446744073709551615 1 ) 55 22 55 23 18446744073709551615 1 { 55 24 55 25 18446744073709551615 12 result_mutex 56 11 56 23 13 1 . 56 23 56 24 27 4 lock 56 24 56 28 27 1 ( 56 28 56 29 27 1 ) 56 29 56 30 27 1 ; 56 30 56 31 18446744073709551615 6 result 57 11 57 17 12 1 . 57 17 57 18 31 9 push_back 57 18 57 27 31 1 ( 57 27 57 28 31 4 temp 57 28 57 32 26 1 ) 57 32 57 33 31 1 ; 57 33 57 34 18446744073709551615 12 result_mutex 58 11 58 23 13 1 . 58 23 58 24 28 6 unlock 58 24 58 30 28 1 ( 58 30 58 31 28 1 ) 58 31 58 32 28 1 ; 58 32 58 33 18446744073709551615 9 calccount 59 11 59 20 18 1 [ 59 20 59 21 32 1 i 59 21 59 22 24 1 ] 59 22 59 23 32 2 ++ 59 23 59 25 18446744073709551615 1 ; 59 25 59 26 18446744073709551615 1 } 60 9 60 10 18446744073709551615 1 } 61 7 61 8 18446744073709551615 1 } 62 5 62 6 18446744073709551615 1 ) 62 6 62 7 25 1 ; 62 7 62 8 18446744073709551615 1 } 63 3 63 4 18446744073709551615 3 for 65 3 65 6 18446744073709551615 1 ( 65 7 65 8 18446744073709551615 4 auto 65 8 65 12 18446744073709551615 1 & 65 13 65 14 18446744073709551615 6 thread 65 14 65 20 33 1 : 65 21 65 22 34 7 threads 65 23 65 30 5 1 ) 65 30 65 31 18446744073709551615 1 { 65 32 65 33 18446744073709551615 6 thread 66 5 66 11 33 1 . 66 11 66 12 35 4 join 66 12 66 16 35 1 ( 66 16 66 17 35 1 ) 66 17 66 18 35 1 ; 66 18 66 19 18446744073709551615 1 } 67 3 67 4 18446744073709551615 4 auto 69 3 69 7 18446744073709551615 4 stop 69 8 69 12 36 1 = 69 13 69 14 18446744073709551615 21 high_resolution_clock 69 15 69 36 22 2 :: 69 36 69 38 23 3 now 69 38 69 41 23 1 ( 69 41 69 42 23 1 ) 69 42 69 43 23 1 ; 69 43 69 44 18446744073709551615 142 /*
  for (int i = 0; i < threadcount; i++) {
    cout << "Thread " << i << " performed " << calccount[i] << " calculations." << endl;
  }
  */ 70 3 74 5 18446744073709551615 16 //result.sort(); 75 3 75 19 18446744073709551615 4 cout 76 3 76 7 14 2 << 76 8 76 10 19 6 result 76 11 76 17 12 1 . 76 17 76 18 37 4 size 76 18 76 22 37 1 ( 76 22 76 23 37 1 ) 76 23 76 24 37 2 << 76 25 76 27 15 32 " prime numbers in the interval" 76 28 76 60 18446744073709551615 2 << 76 61 76 63 19 4 endl 76 64 76 68 20 1 ; 76 68 76 69 18446744073709551615 3 for 78 3 78 6 18446744073709551615 1 ( 78 7 78 8 18446744073709551615 3 int 78 8 78 11 18446744073709551615 1 e 78 12 78 13 38 1 : 78 14 78 15 39 6 result 78 16 78 22 12 1 ) 78 22 78 23 18446744073709551615 1 { 78 24 78 25 18446744073709551615 4 cout 79 5 79 9 14 2 << 79 10 79 12 19 1 e 79 13 79 14 38 2 << 79 15 79 17 19 4 endl 79 18 79 22 20 1 ; 79 22 79 23 18446744073709551615 1 } 80 3 80 4 18446744073709551615 4 auto 82 3 82 7 18446744073709551615 8 duration 82 8 82 16 40 1 = 82 17 82 18 18446744073709551615 13 duration_cast 82 19 82 32 41 1 < 82 32 82 33 41 7 seconds 82 33 82 40 42 1 > 82 40 82 41 41 1 ( 82 41 82 42 41 4 stop 82 42 82 46 36 1 - 82 47 82 48 43 5 start 82 49 82 54 21 1 ) 82 54 82 55 41 1 ; 82 55 82 56 18446744073709551615 4 cout 83 3 83 7 14 2 << 83 8 83 10 15 19 "Calculation took " 83 11 83 30 18446744073709551615 2 << 83 31 83 33 19 8 duration 83 34 83 42 40 1 . 83 42 83 43 44 5 count 83 43 83 48 44 1 ( 83 48 83 49 44 1 ) 83 49 83 50 44 2 << 83 51 83 53 15 4 " s" 83 54 83 58 18446744073709551615 2 << 83 59 83 61 19 4 endl 83 62 83 66 20 1 ; 83 66 83 67 18446744073709551615 1 } 84 1 84 2 18446744073709551615 0 0 45 0 0 0 22 0 0 1 13 0 3 std 22 1 13 0 10 chrono:std 8 1 13 0 4 main 31 1 13 0 10 vector:std 4 1 13 0 10 thread:std 9 1 13 0 68 15:18:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 9 1 13 0 67 16:7:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 9 1 13 0 68 16:14:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 9 1 13 0 68 16:21:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 4 1 13 0 9 mutex:std 9 1 13 0 67 17:9:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 31 1 13 0 16 list:__cxx11:std 9 1 13 0 68 18:13:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 9 1 13 0 67 19:9:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 9 1 13 0 8 cout:std 8 1 13 0 12 operator:std 9 1 13 0 7 cin:std 21 1 13 0 28 operator>>:basic_istream:std 9 1 13 0 68 27:15:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 26 operator:basic_ostream:std 8 1 13 0 8 endl:std 9 1 13 0 67 31:8:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 36 1 13 0 36 high_resolution_clock:_V2:chrono:std 21 1 13 0 31 now:system_clock:_V2:chrono:std 9 1 13 0 68 33:12:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 23 emplace_back:vector:std 9 1 13 0 68 35:11:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 14 lock:mutex:std 21 1 13 0 16 unlock:mutex:std 9 1 13 0 68 41:13:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 9 1 13 0 68 48:20:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 26 push_back:list:__cxx11:std 21 1 13 0 21 operator[]:vector:std 9 1 13 0 68 65:14:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 37 operator*:__normal_iterator:__gnu_cxx 21 1 13 0 15 join:thread:std 9 1 13 0 67 69:8:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 21 size:list:__cxx11:std 9 1 13 0 68 78:12:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 21 1 13 0 28 operator*:_List_iterator:std 9 1 13 0 67 82:8:/home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 8 1 13 0 24 duration_cast:chrono:std 36 1 13 0 18 seconds:chrono:std 8 1 13 0 20 operator-:chrono:std 21 1 13 0 25 count:duration:chrono:std 0 0 1 0 0 0 62 /home/daniesky/CPPprojects/IDATT2104/practice_one/cpp/main.cpp 1677504872